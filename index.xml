<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GUI Free Life</title><link>http://guifreelife.com/</link><description>Recent content on GUI Free Life</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 06 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://guifreelife.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Securing Cloud-init User Data with External Secrets and OpenShift Virtualization</title><link>http://guifreelife.com/blog/2025/10/06/Securing-Cloud-init-User-Data-with-External-Secrets-and-OpenShift-Virtualization/</link><pubDate>Mon, 06 Oct 2025 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2025/10/06/Securing-Cloud-init-User-Data-with-External-Secrets-and-OpenShift-Virtualization/</guid><description>&lt;p>Storing Virtual Machines as Kubernetes resources in git for automated deployment promotes consistency, resilency, and accountability, but commiting secrets to git is risky and should be avoided. Use the External Secrets Operator to securely store cloud-init and other data, and sleep soundly!&lt;/p></description></item><item><title>OpenShift CoreOS On-Cluster Custom Node Image Layering</title><link>http://guifreelife.com/blog/2025/06/20/CoreOS-Image-Layering-Autofs/</link><pubDate>Fri, 20 Jun 2025 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2025/06/20/CoreOS-Image-Layering-Autofs/</guid><description>&lt;p>CoreOS On-cluster Image Layering in OpenShift 4.19 allows modifications to node the operating system. This detailed walk through customizes the node operating system image by adding RPMs to support autofs.&lt;/p>
&lt;p>In &lt;a href="http://guifreelife.com/coming-soon/" title="Configuring AutoFS on OpenShift">part 2&lt;/a> we will configure autofs and enable automatic filesystem mounting across cluster nodes.&lt;/p></description></item><item><title>Managing Readable OpenShift MachineConfigs with Butane</title><link>http://guifreelife.com/blog/2025/05/29/Managing-OpenShift-Machine-Configuration-with-Butane-and-Ignition/</link><pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2025/05/29/Managing-OpenShift-Machine-Configuration-with-Butane-and-Ignition/</guid><description>&lt;p>The OpenShift Machine Configuration Operator applies configuration changes to to nodes using a syntax called &lt;a href="https://coreos.github.io/ignition/specs/" title="CoreOS Ignition Spec">Ignition&lt;/a>,
but managing base64 encoded text can be challenging. What if I told you that you can use plain text and normal files?&lt;/p></description></item><item><title>Generate a Kubeconfig to Enable OpenShift Service Account Authentication</title><link>http://guifreelife.com/blog/2025/04/09/Kubeconfig-for-OpenShift-Service-Accounts/</link><pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2025/04/09/Kubeconfig-for-OpenShift-Service-Accounts/</guid><description>&lt;p>This post demonstrates how to properly generate kubeconfig files for OpenShift ServiceAccounts, enabling secure token-based authentication and TLS connections. You will learn how to create ServiceAccounts, generate time-limited tokens, bundle CA certificates, and package everything into a distributable kubeconfig file that can be stored as a Secret for download.&lt;/p></description></item><item><title>OpenShift Virtual Guest Tagging</title><link>http://guifreelife.com/blog/2025/01/02/OpenShift-Virtualization-VLAN-Guest-Tagging/</link><pubDate>Thu, 02 Jan 2025 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2025/01/02/OpenShift-Virtualization-VLAN-Guest-Tagging/</guid><description>&lt;p>Some workloads require the use of VLAN interfaces in virtual machines. VMware terms this feature &amp;ldquo;Virtual Guest Tagging&amp;rdquo; or &amp;ldquo;VLAN Guest Tagging&amp;rdquo; while OpenStack calls it &amp;ldquo;VLAN-aware instances&amp;rdquo;. See how OpenShift Virtualization can pass 802.1q trunks to VMs using a traditional Linux Bridge interface.&lt;/p></description></item><item><title>Open Virtual Networking Inspection with OpenShift</title><link>http://guifreelife.com/blog/2024/11/19/Open-Virtual-Network-Inspection-on-OpenShift/</link><pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2024/11/19/Open-Virtual-Network-Inspection-on-OpenShift/</guid><description>&lt;p>Accessing the details of the software defined networking features of OpenShift can be helpful for deeper troubleshooting or enhanced understanding. You&amp;rsquo;ll not find a full explanation of &lt;a href="https://www.ovn.org/en/" title="OpenVirtualNetwork">Open Virtual Network&lt;/a> or &lt;a href="https://ovn-kubernetes.io/" title="OVN-Kubernetes">OVN-Kubernetes&lt;/a> here, but you will learn how to quickly peer inside and investigate their inner workings.&lt;/p></description></item><item><title>Using Placements to Apply Open Cluster Management Policies to Kubernetes Clusters</title><link>http://guifreelife.com/blog/2024/03/11/Placing-Open-Cluster-Management-Policies-on-Kubernetes/</link><pubDate>Mon, 11 Mar 2024 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2024/03/11/Placing-Open-Cluster-Management-Policies-on-Kubernetes/</guid><description>&lt;p>&lt;a href="https://access.redhat.com/products/red-hat-advanced-cluster-management-for-kubernetes/" title="RHACM">Red Hat Advanced Cluster Management&lt;/a> (RHACM) enables Open Cluster Management policy driven governance of an entire fleet of Kubernetes clusters. Associating policies with the appropriate clusters is a very flexible operation and requires understanding resources like Placements and ManagedClusterSetBindings. So let&amp;rsquo;s get familiar!&lt;/p></description></item><item><title>Storing OpenShift Credentials with 1Password</title><link>http://guifreelife.com/blog/2023/09/22/Storing-OpenShift-Credentials-with-1Password/</link><pubDate>Fri, 22 Sep 2023 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2023/09/22/Storing-OpenShift-Credentials-with-1Password/</guid><description>&lt;p>If you find yourself frequently rebuilding OpenShift clusters and potentially reusing cluster names, you may find it challanging to manage the credentials consistently and securely. Here is a solution using &lt;a href="https://developer.1password.com/docs/cli/get-started/" title="Get started with 1Password CLI">1Password&lt;/a>.&lt;/p></description></item><item><title>Accessing the Ceph CLI with OpenShift Data Foundation</title><link>http://guifreelife.com/blog/2023/04/06/Accessing-Ceph-CLI-with-OpenShift-Data-Foundation/</link><pubDate>Thu, 06 Apr 2023 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2023/04/06/Accessing-Ceph-CLI-with-OpenShift-Data-Foundation/</guid><description>&lt;p>The Ceph Toolbox is not recommended or supported for use with OpenShift Data Foundation, but sometimes you want a client to troubleshoot with anyway.&lt;/p></description></item><item><title>Extracting TLS CA Certificates from Kubeconfig File</title><link>http://guifreelife.com/blog/2023/03/09/Extracting-CA-Certs-From-Kubeconfig/</link><pubDate>Thu, 09 Mar 2023 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2023/03/09/Extracting-CA-Certs-From-Kubeconfig/</guid><description>&lt;p>OpenShift creates a number of Certificate Authorities to sign TLS certificates which secure functions including load balancing of the API and Ingress services.
Recent versions of openshift-install will place all the CA certificates in the generated &lt;code>auth/kubeconfig&lt;/code> file.&lt;/p>
&lt;p>Here is how to extract and split those certificates into individual files which eases the process of trusting them particularly on a Mac.&lt;/p></description></item><item><title>Autoscaling OpenShift Workloads With Custom Prometheus Metrics</title><link>http://guifreelife.com/blog/2022/11/03/Autoscaling-OpenShift-Workloads-with-Custom-Prometheus-Metrics/</link><pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2022/11/03/Autoscaling-OpenShift-Workloads-with-Custom-Prometheus-Metrics/</guid><description>&lt;p>Kubernetes enables the automated scaling of applications to meet workload demands. Historically only memory and CPU consumption could be considered in scaling decisions, but the OpenShift Custom Metrics Autoscaler operator and KEDA remove that limitation. Read on to learn how OpenShift enables auto scaling based on the metrics that are important to your business.&lt;/p></description></item><item><title>Hybrid Cloud Management With Red Hat</title><link>http://guifreelife.com/blog/2022/09/19/Hybrid-Cloud-Management-with-Red-Hat/</link><pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2022/09/19/Hybrid-Cloud-Management-with-Red-Hat/</guid><description>&lt;p>Whether workloads are in the datacenter, in the cloud, or even in multiple clouds, OpenShift provides a consistent experience. And the Hybrid Cloud Console is your entry point for Red Hat cloud services to enable the most effective use of each environment. This video demo walks through the provisioning of &lt;a href="https://www.redhat.com/en/technologies/cloud-computing/openshift/aws" title="Red Hat OpenShift Service on AWS">ROSA&lt;/a> and using Red Hat Advanced Cluster Management with EKS. Finally, &lt;a href="https://www.redhat.com/en/technologies/management/advanced-cluster-management" title="Red Hat Advanced Cluster Management for Kubernetes">RHACM&lt;/a> policies are deployed to ensure automatic application of Red Hat Advanced Cluster Security.&lt;/p></description></item><item><title>OpenShift Virtualization on vSphere</title><link>http://guifreelife.com/blog/2022/05/13/OpenShift-Virtualization-on-vSphere/</link><pubDate>Fri, 13 May 2022 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2022/05/13/OpenShift-Virtualization-on-vSphere/</guid><description>&lt;p>OpenShift Virtualization builds upon &lt;a href="https://kubevirt.io" title="KubeVirt.io">KubeVirt&lt;/a> to provide a container native home for your virtual machine workloads. While bare metal is the only officially support platform today, this post will walk through enabling OpenShift Virtualization on vSphere in a lab environment. With nested virtualization you&amp;rsquo;ll be able to spin up containerized VMs bridged to your physical networks.&lt;/p></description></item><item><title>Debugging AWS STS Authentication for OpenShift Operators</title><link>http://guifreelife.com/blog/2022/03/10/Debugging-AWS-STS-Authentication-for-OpenShift-Operators/</link><pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2022/03/10/Debugging-AWS-STS-Authentication-for-OpenShift-Operators/</guid><description>&lt;p>OpenShift supports granular AWS permissions for pods running cluster operators or even user applications. This enhances security by providing only the necessary privileges and nothing more. This post explores debugging authN and authZ of pods attempting to use fine grained IAM roles in combination with AWS secure token service.&lt;/p></description></item><item><title>Red Hat Advanced Cluster Security Walkthrough</title><link>http://guifreelife.com/blog/2021/12/22/Red-Hat-Advanced-Cluster-Security-Walkthrough/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2021/12/22/Red-Hat-Advanced-Cluster-Security-Walkthrough/</guid><description>&lt;p>Red Hat Advanced Cluster Security for Kubernetes enables organizations to securely build, deploy, and run cloud-native applications anywhere. This video demonstration walks through the major features of RHACS to demonstrate vulnerability management, network segmentation, custom security policies, and more!&lt;/p></description></item><item><title>Red Hat Advanced Cluster Management Walkthrough</title><link>http://guifreelife.com/blog/2021/12/21/Red-Hat-Advanced-Cluster-Management-Walkthrough/</link><pubDate>Tue, 21 Dec 2021 09:00:00 -0800</pubDate><guid>http://guifreelife.com/blog/2021/12/21/Red-Hat-Advanced-Cluster-Management-Walkthrough/</guid><description>&lt;p>Red Hat Advanced Cluster Management for Kubernetes, &lt;a href="https://www.redhat.com/en/technologies/management/advanced-cluster-management" title="Red Hat Advanced Cluster Management for Kubernetes">RHACM&lt;/a>, built on the Open Cluster Management &lt;a href="https://open-cluster-management.io/" title="Open Cluster Management">project&lt;/a>, manages Kubernetes distributions like AKS, EKS, GKE, and OpenShift including the workloads they host. Read on for a demonstration of RHACM features like Cluster Hibernation, Cluster Pools, Multi-cluster application deployment and Observability.&lt;/p>
&lt;p>Skip to the end for the complete &lt;a href="https://www.youtube.com/watch?v=rS9IatJBRP8" title="YouTube Red Hat Advanced Cluster Management Demos">video demo&lt;/a> or take your time and stroll through a few quick GUI Free reanimations on your way there.&lt;/p></description></item><item><title>Protect Gitignored but Tracked Files</title><link>http://guifreelife.com/blog/2021/08/18/Protect-Gitignored-but-Tracked-Files/</link><pubDate>Wed, 18 Aug 2021 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2021/08/18/Protect-Gitignored-but-Tracked-Files/</guid><description>&lt;p>Sometimes you want to put files in git that you really shouldn&amp;rsquo;t be putting in git.&lt;/p></description></item><item><title>Recovering kubeconfig for a Cluster Created with RHACM</title><link>http://guifreelife.com/blog/2021/08/13/RHACM-Recover-Created-Cluster-Credentials-and-Kubeconfig/</link><pubDate>Fri, 13 Aug 2021 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2021/08/13/RHACM-Recover-Created-Cluster-Credentials-and-Kubeconfig/</guid><description>&lt;p>&lt;a href="https://access.redhat.com/products/red-hat-advanced-cluster-management-for-kubernetes/" title="RHACM">Red Hat Advanced Cluster Management for Kubernetes&lt;/a> and it&amp;rsquo;s upstream &lt;a href="https://open-cluster-management.io/" title="OCM">Open Cluster Management&lt;/a> automate cluster lifecycle management from creation, configuration, upgrade, and destruction.&lt;/p>
&lt;p>If a cluster is created by RHACM you may need to download the kubeadmin password and the kubeconfig. This is easily accomplished by browsing to the RHACM cluster overview, but how do you do the same from the CLI?&lt;/p>
&lt;h1 id="clusterdeployment">ClusterDeployment&lt;/h1>
&lt;p>The creation of a cluster starts with a ClusterDeployment which will be interpreted by &lt;a href="https://github.com/openshift/hive" title="Hive">Hive&lt;/a>. Subsequently associated kubeconfig and kuebadmincreds secrets will be generated holding the values we are looking for.&lt;/p></description></item><item><title>Deploying a Cross-platform Windows and Linux Application to OpenShift</title><link>http://guifreelife.com/blog/2021/07/10/OpenShift-Windows-Containers-part-3/</link><pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2021/07/10/OpenShift-Windows-Containers-part-3/</guid><description>&lt;p>An application can sometimes require diverse components that span technology stacks. There may be a depency on a legacy component built for Windows which may not be suitable for deployment to Linux. The good news is it may still be suitable for deployment to Kubernetes. With a Windows node in your OpenShift cluster you can deploy cross-platform applications that can simultaneously leverage the strengths of Linux and Windows.&lt;/p></description></item><item><title>Adding a Windows Node to an OpenShift Cluster</title><link>http://guifreelife.com/blog/2021/06/03/OpenShift-Windows-Containers-part-2/</link><pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2021/06/03/OpenShift-Windows-Containers-part-2/</guid><description>&lt;p>The Windows Machine Config Operator builds and configures Windows machines to act as nodes in an OpenShift cluster enabling cross platform workloads. This post will demonstrate the addition of a Windows node to an existing cluster and explore the integration of Windows and Kubernetes.&lt;/p></description></item><item><title>Installing OpenShift on Azure for Windows Containers</title><link>http://guifreelife.com/blog/2021/05/18/OpenShift-Windows-Containers-part-1/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2021/05/18/OpenShift-Windows-Containers-part-1/</guid><description>&lt;p>Adding support for Windows nodes in your OpenShift cluster is a day 2 operation that requires preparation at install time.
It is important to accommodate the hybrid networking requirements for Windows Kubernetes nodes.
Azure specific tasks and gotchas are highlighted in this part 1 of 3 while laying the groundwork applicable to deploying OpenShift on any provider in preparation for managing Windows containers.&lt;/p></description></item><item><title>How do OpenShift Over The Air Updates Work?</title><link>http://guifreelife.com/blog/2021/03/09/Understanding-OpenShift-Over-The-Air-Updates/</link><pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2021/03/09/Understanding-OpenShift-Over-The-Air-Updates/</guid><description>&lt;p>OpenShift 4 extends the &lt;a href="https://coreos.com/blog/introducing-operator-framework" title="Introducing Operator Framework">operator pattern introduced by CoreOS&lt;/a>, and enables automated management of the Kubernetes cluster and the underlying resources including machine instances and operating system configuration. Operator driven over the air updates enable automated updates much like you are accustomed to receiving for your smart phone. What follows is a a technical exploration of the OpenShift over the air updates implementation.&lt;/p>
&lt;h1 id="operators-all-the-way-down">Operators All the Way Down&lt;/h1>
&lt;p>&lt;a href="https://nara.getarchive.net/media/the-face-of-a-computer-operator-from-the-2134th-communications-squadron-is-2ca9c9">&lt;img src="http://guifreelife.com/images/the-face-of-a-computer-operator-from-the-2134th-communications-squadron-is-2ca9c9.jpg" alt="Computer Operator">&lt;/a>&lt;/p></description></item><item><title>OpenShift 4 on OpenStack Networking and Installation</title><link>http://guifreelife.com/blog/2020/02/15/OpenShift-4-on-OpenStack-Networking-and-Installation/</link><pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2020/02/15/OpenShift-4-on-OpenStack-Networking-and-Installation/</guid><description>&lt;p>OpenShift Containter Platform 4 is much more like Tectonic than OpenShift 3. Particularly when it comes to &lt;a href="https://docs.openshift.com/container-platform/4.3/architecture/architecture-installation.html">installation&lt;/a> and node management. Rather then building machines and running &lt;a href="https://github.com/openshift/openshift-ansible/tree/release-3.11">an Ansible playbook&lt;/a> to configure them you now have the option of setting a fewer paramters in an install config running an installer to build and configure the cluster from scratch.&lt;/p>
&lt;p>I would like to illustrate how the basics of the networking might look when &lt;a href="https://docs.openshift.com/container-platform/4.3/installing/installing_openstack/installing-openstack-installer-custom.html">installing OpenShift on OpenStack&lt;/a>. I also wanted an excuse to try out a new iPad sketch app. These notes are based on recent 4.4 nightly builds on OSP 13 Queens.&lt;/p></description></item><item><title>Playbook to replace bootstrap.kubeconfig and node certificates on OpenShift 3.10 3.11</title><link>http://guifreelife.com/blog/2019/05/09/Replace-Bootstrap-Kubeconfig/</link><pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2019/05/09/Replace-Bootstrap-Kubeconfig/</guid><description>&lt;p>If you are a serial upgrader like me, you may have found that at one point during your 3.10.xx patching (say 3.10.119) you hit this error during the data plane upgrade:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>TASK [openshift_node : Approve the node] ************************************************************
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>task path: /usr/share/ansible/openshift-ansible/roles/openshift_node/tasks/upgrade/restart.yml:49
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using module file /usr/share/ansible/openshift-ansible/roles/lib_openshift/library/oc_csr_approve.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FAILED - RETRYING: Approve the node (30 retries left).Result was: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;all_subjects_found&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;attempts&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;changed&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;client_approve_results&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;client_csrs&amp;#34;: {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;failed&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;invocation&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;module_args&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;node_list&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ose-test-node-01.example.com&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;oc_bin&amp;#34;: &amp;#34;oc&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;oc_conf&amp;#34;: &amp;#34;/etc/origin/master/admin.kubeconfig&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;msg&amp;#34;: &amp;#34;Could not find csr for nodes: ose-test-node-01.example.com&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Turns out this was because the start up of &lt;code>atomic-openshift-node&lt;/code> failed to generate a CSR.&lt;/p></description></item><item><title>Downgrade Etcd 3.3.11 to 3.2.22 for OpenShift Compatibility</title><link>http://guifreelife.com/blog/2019/02/19/Downgrade-Etcd-for-OpenShift-Compatibility/</link><pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2019/02/19/Downgrade-Etcd-for-OpenShift-Compatibility/</guid><description>&lt;p>While I was working on &lt;a href="http://guifreelife.com/blog/2019/02/08/Migration-of-Etcd-to-Masters-for-OpenShift-3.9-Upgrade-to-3.10">migrating etcd to my master nodes&lt;/a> I was bitten by an incompatible etcd v3.3.11 RPM made available via RHEL Server Extras repo. Before I got to my last master the RPM was no longer available, and the scaleup playbook failed. I became aware that 3.3.11 &lt;a href="https://access.redhat.com/articles/2176281">is not compatible&lt;/a> and &lt;a href="https://access.redhat.com/solutions/3885101">should not have been made available&lt;/a>.&lt;/p>
&lt;p>Unfortunately all members of my etcd cluster were already upgraded and the fix is to take down the cluster, downgrade etcd, and restore from snapshot. It would be great &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1672518">if the etcd version was pinned&lt;/a> like Docker is.&lt;/p></description></item><item><title>Etcdctl v2 and v3 Aliases for Peer Authenticated Commands</title><link>http://guifreelife.com/blog/2019/02/08/Etcd-Shortcut-With-Peer-Auth/</link><pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2019/02/08/Etcd-Shortcut-With-Peer-Auth/</guid><description>&lt;p>Getting all the arguments to &lt;code>etcdctl&lt;/code> right can be a bit of a pain. Here are a couple of aliases which take advantage of the values in the &lt;code>etcd.conf&lt;/code> file.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#658b00">alias&lt;/span> &lt;span style="color:#00688b">etcd2&lt;/span>=&lt;span style="color:#cd5555">&amp;#39;. /etc/etcd/etcd.conf &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> ETCDCTL_API=2 etcdctl \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> --cert-file ${ETCD_PEER_CERT_FILE} \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> --key-file ${ETCD_PEER_KEY_FILE} \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> --ca-file ${ETCD_PEER_TRUSTED_CA_FILE:-$ETCD_PEER_CA_FILE} \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> --endpoints &amp;#34;${ETCD_ADVERTISE_CLIENT_URLS}&amp;#34;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#658b00">alias&lt;/span> &lt;span style="color:#00688b">etcd3&lt;/span>=&lt;span style="color:#cd5555">&amp;#39;. /etc/etcd/etcd.conf &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> ETCDCTL_API=3 etcdctl \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> --cert ${ETCD_PEER_CERT_FILE} \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> --key ${ETCD_PEER_KEY_FILE} \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> --cacert ${ETCD_PEER_TRUSTED_CA_FILE:-$ETCD_PEER_CA_FILE} \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> --endpoints &amp;#34;${ETCD_ADVERTISE_CLIENT_URLS}&amp;#34;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you are using OpenShift, you may also find that you already have some bash functions &lt;a href="https://github.com/openshift/openshift-ansible/blob/master/roles/etcd/tasks/drop_etcdctl.yml">enabled by the etcd role&lt;/a> in &lt;code>/etc/profile.d/etcdctl.sh&lt;/code>. They will look different depending on your version. Below is from 3.9.&lt;/p></description></item><item><title>Migration of Etcd to Masters for OpenShift 3.9 to 3.10 Upgrade</title><link>http://guifreelife.com/blog/2019/02/08/Migration-of-Etcd-to-Masters-for-OpenShift-3.9-Upgrade-to-3.10/</link><pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2019/02/08/Migration-of-Etcd-to-Masters-for-OpenShift-3.9-Upgrade-to-3.10/</guid><description>&lt;p>As of OpenShift Container Platform 3.10 etcd is expected to run in &lt;a href="https://docs.openshift.com/container-platform/3.10/release_notes/ocp_3_10_release_notes.html#ocp-310-control-plane-changes">static pods&lt;/a> on the master nodes in the control plane. You may have a deployed an HA cluster with dedicated etcd nodes managed with systemd. How do you migrate the this new architecture?&lt;/p>
&lt;p>&lt;strong>Assumptions:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>You are running OCP 3.9&lt;/li>
&lt;li>You have multiple Master nodes&lt;/li>
&lt;li>You have dedicated Etcd nodes&lt;/li>
&lt;li>You are running RHEL, not Atomic nodes&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Outline:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Backup etcd&lt;/li>
&lt;li>Scale up Etcd cluster to include Master nodes&lt;/li>
&lt;li>Configure Openshift Masters to ignore the old Etcd nodes&lt;/li>
&lt;li>Scale down etcd cluster to remove old Etcd nodes&lt;/li>
&lt;/ul>
&lt;h1 id="detailed-steps">Detailed Steps&lt;/h1>
&lt;p>Follow along in this document &lt;a href="https://docs.openshift.com/container-platform/3.9/admin_guide/assembly_replace-etcd-member.html">https://docs.openshift.com/container-platform/3.9/admin_guide/assembly_replace-etcd-member.html&lt;/a>
You may find &lt;a href="http://guifreelife.com/blog/2019/02/08/Etcd-Shortcut-With-Peer-Auth">some etcd aliases handy&lt;/a> before proceeding.&lt;/p></description></item><item><title>How to Create and Use OpenStack Heat Orchestration Templates Part 1</title><link>http://guifreelife.com/blog/2018/11/21/OpenStack-Heat-Orchestration-Templates-Howto-Part-1/</link><pubDate>Wed, 21 Nov 2018 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2018/11/21/OpenStack-Heat-Orchestration-Templates-Howto-Part-1/</guid><description>&lt;p>OpenStack enables automated creation of resources such as networks, routers, and servers using &lt;a href="http://docs.openstack.org/developer/heat/template_guide/hot_spec.html">Heat&lt;/a> Orchestration Templates. If you are new to OpenStack and are using a &lt;a href="https://docs.openstack.org/tripleo-docs/latest/">TripleO&lt;/a> based distribution you may have seen them up close and personal without knowing it. What follows is a very basic exploration of Heat.&lt;/p>
&lt;p>Heat templates are written in YAML format, and you can quickly see from the documentation that a basic template will likely have 4 sections:&lt;/p></description></item><item><title>Creating OpenStack Provider Network for Use by a Single Project</title><link>http://guifreelife.com/blog/2018/10/30/OpenStack-Private-Provider-Network/</link><pubDate>Tue, 30 Oct 2018 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2018/10/30/OpenStack-Private-Provider-Network/</guid><description>&lt;p>OpenStack supports &lt;a href="https://docs.openstack.org/install-guide/launch-instance-networks-provider.html">&amp;ldquo;provider&amp;rdquo; networks&lt;/a>, which are networks that pre-exist in your physical infrastructure and are &amp;ldquo;provided&amp;rdquo; to the cloud users rather than created by the user. Only an admin is permitted to create a provider network.&lt;/p>
&lt;p>A prequisite is the provider network must be plumbed to the external bridge on your controller and nova nodes.&lt;/p>
&lt;p>Here is an Ansible playbook to create a project, place a unshared provider network and subnet in that project. Afterwards we will grant access to the members of this project using the openstack client. It &lt;a href="https://docs.ansible.com/ansible/latest/modules/list_of_cloud_modules.html#openstack">does not appear&lt;/a> that Ansible has a OpenStack network RBAC module at this time.&lt;/p></description></item><item><title>Load balancing of OpenShift HA Routers Mind the GARP</title><link>http://guifreelife.com/blog/2018/02/16/OpenShift-Router-LoadBalancing/</link><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2018/02/16/OpenShift-Router-LoadBalancing/</guid><description>&lt;p>&lt;a href="http://guifreelife.com/blog/2016/03/01/OpenShift-3-HA-Routing">OpenShift HA Routing&lt;/a> uses &lt;a href="https://docs.openshift.com/container-platform/latest/architecture/networking/haproxy-router.html">haproxy application routers&lt;/a> to get traffic into the cluster. These application routers are made redundant by running &lt;a href="https://docs.openshift.com/container-platform/latest/admin_guide/high_availability.html">ipfailover (keepalived)&lt;/a> pods to maintain a set of Virtual IPs on each infrastructure node where the application routers run. These VIPs are then referenced by round robin DNS records to enable a measure of load balancing.&lt;/p>
&lt;p>OK, so now you are load balancing at the network layer, but what about the link layer?
Did you know that even &lt;em>if&lt;/em> you somehow manage to perfectly balance traffic among the VIPs using RR DNS you could still be using only one of your application routers? Well you could be!&lt;/p></description></item><item><title>OpenShift 3.6 Upgrade Metrics Fails Missing heapster-certs Secret</title><link>http://guifreelife.com/blog/2017/10/13/OpenShift-3.6-Upgrade-Metrics-Fails-Missing-heapster-certs-Secret/</link><pubDate>Fri, 13 Oct 2017 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2017/10/13/OpenShift-3.6-Upgrade-Metrics-Fails-Missing-heapster-certs-Secret/</guid><description>&lt;p>After your upgrade to OpenShift v3.6 did the &lt;a href="https://docs.openshift.com/container-platform/3.6/install_config/cluster_metrics.html">deployment of cluster metrics&lt;/a> wind up with empty graphs? Check if the heapster pod failed to start due to a missing secret called &lt;code>heapster-certs&lt;/code> in the &lt;code>openshift-infra&lt;/code> namespace.&lt;/p>
&lt;h1 id="problem">Problem&lt;/h1>
&lt;p>&lt;strong>Heapster pod is failing to start&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ oc get pods
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME READY STATUS RESTARTS AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hawkular-cassandra-1-l1f3s 1/1 Running &lt;span style="color:#b452cd">0&lt;/span> 9m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hawkular-metrics-rdl07 1/1 Running &lt;span style="color:#b452cd">0&lt;/span> 9m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>heapster-cfpcj 0/1 ContainerCreating &lt;span style="color:#b452cd">0&lt;/span> 3m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Check what volumes it is attempting to mount&lt;/strong>&lt;/p></description></item><item><title>Installing OpenShift on OpenStack</title><link>http://guifreelife.com/blog/2017/08/20/OpenShift-on-OpenStack/</link><pubDate>Sun, 20 Aug 2017 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2017/08/20/OpenShift-on-OpenStack/</guid><description>&lt;p>&lt;strong>This is a work in progress&lt;/strong>&lt;/p>
&lt;p>The OpenShift Container Platform (OCP) can run on many types of infrastructure; from a Docker contrainer, to a single VM, to a fleet of baremetal or VMs on an infrastructure provider such as RHV, VMware, Amazon EC2, Google Compute Engine, or OpenStack Platform (OSP). This post is to document my experimentation with setting up OCP on OSP.&lt;/p>
&lt;h1 id="doc-overview">Doc Overview&lt;/h1>
&lt;p>So where are the docs?&lt;/p></description></item><item><title>OpenStack Network Diagram</title><link>http://guifreelife.com/blog/2017/08/14/OpenStack-Network-Diagram/</link><pubDate>Mon, 14 Aug 2017 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2017/08/14/OpenStack-Network-Diagram/</guid><description>&lt;p>What does the networking for OpenStack look like? Maybe something like this.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>#&lt;/th>
 &lt;th>Network&lt;/th>
 &lt;th>VLAN&lt;/th>
 &lt;th>IP CIDR&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>N1&lt;/td>
 &lt;td>Provisioning (PXE)&lt;/td>
 &lt;td>V:310&lt;/td>
 &lt;td>172.23.32.0/20&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>N2&lt;/td>
 &lt;td>Internal API&lt;/td>
 &lt;td>V:311&lt;/td>
 &lt;td>172.23.21.0/24&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>N3&lt;/td>
 &lt;td>Storage Network (Front)&lt;/td>
 &lt;td>V:312&lt;/td>
 &lt;td>172.23.22.0/24&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>N4&lt;/td>
 &lt;td>Storage Mgmt (Back)&lt;/td>
 &lt;td>V:313&lt;/td>
 &lt;td>172.23.23.0/24&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>N5&lt;/td>
 &lt;td>External Floating IPs&lt;/td>
 &lt;td>V:179&lt;/td>
 &lt;td>192.0.179.0/24&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>N6&lt;/td>
 &lt;td>Public API&lt;/td>
 &lt;td>V:177&lt;/td>
 &lt;td>192.0.177.0/24&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>N7&lt;/td>
 &lt;td>Overcloud Provisioning (Tenant PXE)&lt;/td>
 &lt;td>V:314&lt;/td>
 &lt;td>172.23.48.0/20&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>N8&lt;/td>
 &lt;td>Provider Network (Tenant VM with physical router)&lt;/td>
 &lt;td>V:175&lt;/td>
 &lt;td>192.0.175.0/24&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>N9&lt;/td>
 &lt;td>Tenant Network (tunnels)&lt;/td>
 &lt;td>V:317&lt;/td>
 &lt;td>172.23.96.0/20&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>N10&lt;/td>
 &lt;td>IPMI (iDRAC)&lt;/td>
 &lt;td>V:315&lt;/td>
 &lt;td>172.23.64.0/20&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>N11&lt;/td>
 &lt;td>Tenant IPMI (iDRAC)&lt;/td>
 &lt;td>V:316&lt;/td>
 &lt;td>172.23.80.0/20&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>&lt;a href="http://guifreelife.com/images/openstack-network-pub.png">&lt;img src="http://guifreelife.com/images/thumb/openstack-network-pub.png" alt="OpenStack Network Diagram">&lt;/a>&lt;/p></description></item><item><title>How to push an image to an unexposed OpenShift Docker registry</title><link>http://guifreelife.com/blog/2017/08/09/Pushing-To-OpenShift-Registry/</link><pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2017/08/09/Pushing-To-OpenShift-Registry/</guid><description>&lt;p>How do I push an image to the OpenShift Docker registry if it is not exposed outside the cluster?&lt;/p>
&lt;p>&lt;strong>Login to a member node&lt;/strong>&lt;/p>
&lt;p>Get on a machine that has docker and participates in the cluster SDN or can somehow access that network. (eg. &lt;code>172.30.0.0/16&lt;/code>)&lt;/p>
&lt;p>&lt;strong>Get the IP of the registry&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>oc get svc docker-registry -n default --template &lt;span style="color:#cd5555">&amp;#34;{{ .spec.clusterIP }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">SVC_REGISTRY&lt;/span>=&lt;span style="color:#8b008b;font-weight:bold">$(&lt;/span>oc get svc docker-registry -n default --template &lt;span style="color:#cd5555">&amp;#34;{{ .spec.clusterIP }}&amp;#34;&lt;/span>&lt;span style="color:#8b008b;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Get a token for your session&lt;/strong>&lt;/p></description></item><item><title>Automated Pruning of OpenShift Artifacts; Builds, Deploys, Images</title><link>http://guifreelife.com/blog/2017/03/22/Automated-OpenShift-Artifact-Pruning/</link><pubDate>Wed, 22 Mar 2017 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2017/03/22/Automated-OpenShift-Artifact-Pruning/</guid><description>&lt;p>After running openshift for a while I discovered that letting builds pile up to around to around 1,200 led to what was essentially a deadlock in the scheduling of new builds. New builds were stuck in a &lt;em>New, waiting&lt;/em> state indefinitely.&lt;/p>
&lt;p>This &lt;a href="https://github.com/openshift/origin/pull/12623">was fixed&lt;/a> as of OCP 3.4.1, but it caused me to get more pro-active in the &lt;a href="https://docs.openshift.org/latest/admin_guide/pruning_resources.html">pruning of artifacts&lt;/a> within OpenShift.&lt;/p>
&lt;p>I threw together a script and a playbook to deploy it. YMMV&lt;/p></description></item><item><title>Configuring OpenShift with Multiple Sharded Routers</title><link>http://guifreelife.com/blog/2017/01/29/OpenShift-Multiple-Sharded-Routers/</link><pubDate>Sun, 29 Jan 2017 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2017/01/29/OpenShift-Multiple-Sharded-Routers/</guid><description>&lt;p>I needed to host a service that would be consumed by a &lt;a href="http://www.teradici.com/">closed client&lt;/a> that insists on speaking HTTPS on port 50,000. To solve this, I added a 2nd router deployment and used the OpenShift router sharding feature to selectively enable routes on the 2nd router by way of selectors.&lt;/p>
&lt;p>To summarize:&lt;/p>
&lt;p>&lt;em>&lt;a href="http://guifreelife.com/blog/2016/03/01/OpenShift-3-HA-Routing">Existing HA router&lt;/a>:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>HTTP 80&lt;/li>
&lt;li>HTTPS 443&lt;/li>
&lt;li>Haproxy Stats 1,936&lt;/li>
&lt;/ul>
&lt;p>&lt;em>Added HA router:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>HTTP 49,999&lt;/li>
&lt;li>HTTPS 50,000&lt;/li>
&lt;li>Haproxy Stats 51,936&lt;/li>
&lt;/ul>
&lt;h1 id="how-to">How To&lt;/h1>
&lt;h2 id="open-infra-node-firewalls">Open infra node firewalls&lt;/h2>
&lt;ul>
&lt;li>Open firewall on infra nodes where router will run to allow new http and https port&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> iptables -A OS_FIREWALL_ALLOW -m tcp -p tcp --dport &lt;span style="color:#b452cd">49999&lt;/span> -j ACCEPT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iptables -A OS_FIREWALL_ALLOW -m tcp -p tcp --dport &lt;span style="color:#b452cd">50000&lt;/span> -j ACCEPT
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>This can also be done with Ansible and the &lt;a href="https://github.com/openshift/openshift-ansible/tree/master/roles/os_firewall">os_firewall role&lt;/a> in your playbook. (&lt;em>untested&lt;/em>)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#8b008b;font-weight:bold">hosts&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>infra-nodes&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">vars&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">os_firewall_use_firewalld&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">False&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">os_firewall_allow&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#8b008b;font-weight:bold">service&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>teradici-http&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">port&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#b452cd">49999&lt;/span>/tcp&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#8b008b;font-weight:bold">service&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>teradici-https&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">port&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#b452cd">50000&lt;/span>/tcp&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">roles&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- os_firewall&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-a-router">Create a router&lt;/h2>
&lt;ul>
&lt;li>Create a router called &lt;em>ha-router-teradici&lt;/em> with &lt;code>oa adm router&lt;/code> or &lt;code>oadm router&lt;/code> on these ports and also make sure the stats port does not clash with existing router on port 1936&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>[root@ose-test-master-01 ~]&lt;span style="color:#228b22"># oc get nodes --show-labels&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME STATUS AGE LABELS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ose-test-master-01.example.com Ready 180d kubernetes.io/hostname=ose-test-master-01.example.com,region=master,zone=rhev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ose-test-master-02.example.com Ready 180d kubernetes.io/hostname=ose-test-master-02.example.com,region=master,zone=rhev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ose-test-node-01.example.com Ready 180d ha-router=primary,kubernetes.io/hostname=ose-test-node-01.example.com,region=infra,zone=rhev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ose-test-node-02.example.com Ready 180d ha-router=primary,kubernetes.io/hostname=ose-test-node-02.example.com,region=infra,zone=rhev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ose-test-node-03.example.com Ready 180d kubernetes.io/hostname=ose-test-node-03.example.com,region=primary,zone=rhev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ose-test-node-04.example.com Ready 180d kubernetes.io/hostname=ose-test-node-04.example.com,region=primary,zone=rhev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[root@ose-test-master-01 ~]&lt;span style="color:#228b22"># oadm router ha-router-teradici \&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --ports=&lt;span style="color:#cd5555">&amp;#39;49999:49999,50000:50000&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">&lt;/span> --stats-port=&lt;span style="color:#b452cd">51936&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">&lt;/span> --replicas=&lt;span style="color:#b452cd">2&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">&lt;/span> --selector=&lt;span style="color:#cd5555">&amp;#34;ha-router=primary&amp;#34;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">&lt;/span> --selector=&lt;span style="color:#cd5555">&amp;#34;region=infra&amp;#34;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">&lt;/span> --labels=&lt;span style="color:#cd5555">&amp;#34;ha-router=teradici&amp;#34;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">&lt;/span> --default-cert=201602_router_wildcard.os.example.com.pem &lt;span style="color:#cd5555">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">&lt;/span> --service-account=router
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>GOOD&lt;/em>: I see that the ports are set properly in the haproxy.config and the service objects&lt;/p></description></item><item><title>OpenShift Cluster Metrics and Cassandra Troubleshooting</title><link>http://guifreelife.com/blog/2016/11/14/OpenShift-Cluster-Metrics-and-Cassandra-Troubleshooting/</link><pubDate>Mon, 14 Nov 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/11/14/OpenShift-Cluster-Metrics-and-Cassandra-Troubleshooting/</guid><description>&lt;p>OpenShift gathers &lt;a href="https://docs.openshift.com/container-platform/3.3/install_config/cluster_metrics.html">cluster metrics&lt;/a> such as CPU, memory, and network bandwidth per pod which can assist in troubleshooting and capacity planning. The metrics are also used to support &lt;a href="https://docs.openshift.com/container-platform/3.3/dev_guide/pod_autoscaling.html">horizontal pod autoscaling&lt;/a>, which makes the metrics service not just helpful, but critical to operation.&lt;/p>
&lt;h2 id="missing-liveness-probes">Missing Liveness Probes&lt;/h2>
&lt;p>There are 3 major components in the metrics collection process. &lt;a href="https://github.com/kubernetes/heapster">Heapster&lt;/a> gathers stats from Docker and feeds them to &lt;a href="https://github.com/hawkular/hawkular-metrics">Hawkular Metrics&lt;/a> to tuck away for safe keeping in &lt;a href="http://cassandra.apache.org/">Cassandra&lt;/a>.&lt;/p></description></item><item><title>How to List Tags On Redhat Registry Images</title><link>http://guifreelife.com/blog/2016/07/11/List-Tags-On-Redhat-Registry-Images/</link><pubDate>Mon, 11 Jul 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/07/11/List-Tags-On-Redhat-Registry-Images/</guid><description>&lt;p>Ever gone to &lt;a href="https://access.redhat.com/search/#/container-images">RedHat&amp;rsquo;s container registry&lt;/a> to search for an image and been left wondering what versions exist? Ever been frustrated by the inconsistent tag format? Is there a &lt;em>v&lt;/em> or is there not a &lt;em>v&lt;/em>? Me too.&lt;/p>
&lt;p>Docker Hub has progressed to &lt;a href="https://docs.docker.com/registry/spec/api/">v2&lt;/a>, while the RedHat registry is still &lt;a href="https://docs.docker.com/v1.6/reference/api/registry_api/">v1&lt;/a> at the moment. As long as you use the right syntax, you can use curl to query the registry API and &lt;a href="https://docs.docker.com/v1.6/reference/api/registry_api/#list-repository-tags">list the tags&lt;/a> like this:&lt;/p></description></item><item><title>Deploy Hawkular Metrics in CDK 2.1 OpenShift 3.2</title><link>http://guifreelife.com/blog/2016/06/16/Deploy-Hawkular-Metrics-in-CDK-2.0-OpenShift-3.1/</link><pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/06/16/Deploy-Hawkular-Metrics-in-CDK-2.0-OpenShift-3.1/</guid><description>&lt;p>&lt;strong>Update!&lt;/strong> &lt;em>I failed with CDK 2.0, but CDK 2.1 works with some fiddling.&lt;/em>&lt;/p>
&lt;p>In my &lt;a href="http://guifreelife.com/blog/2016/06/16/Getting-Started-With-RedHat-Container-Development-Kit">last post&lt;/a> I installed Red Hat Container Developer Kit to deploy OpenShift Enterprise using Vagrant. But now I want to add Hawkular Metrics to that deployment.&lt;/p>
&lt;h1 id="deploy-metrics">Deploy Metrics&lt;/h1>
&lt;p>Refer to &lt;a href="https://docs.openshift.com/enterprise/3.2/install_config/cluster_metrics.html">the docs&lt;/a> for deploying metrics in OSE.&lt;/p>
&lt;p>&lt;a href="http://guifreelife.com/images/openshift-cdk-metrics-0.png">&lt;img src="http://guifreelife.com/images/thumb/openshift-cdk-metrics-0.png" alt="OpenShift Metrics">&lt;/a>&lt;/p>
&lt;p>Login to the vagrant CDK VM before continuing&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#658b00">cd&lt;/span> ~/cdk/components/rhel/rhel-ose/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ vagrant ssh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ oc login
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication required &lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> https://127.0.0.1:8443 (openshift)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Username: admin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Password: admin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Login successful.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ oc project openshift-infra
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ oc get sa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME SECRETS AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>build-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>daemonset-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>default &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deployer &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deployment-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gc-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hpa-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>job-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>namespace-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pv-binder-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pv-provisioner-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pv-recycler-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>replication-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ oc create -f - &lt;span style="color:#cd5555">&amp;lt;&amp;lt;API
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">kind: ServiceAccount
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> name: metrics-deployer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> secrets:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> - name: metrics-deployer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">API&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ oc secrets new metrics-deployer &lt;span style="color:#00688b">nothing&lt;/span>=/dev/null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ oadm policy add-role-to-user edit system:serviceaccount:openshift-infra:metrics-deployer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ oadm policy add-cluster-role-to-user cluster-reader system:serviceaccount:openshift-infra:heapster
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From your OSE server grab &lt;code>/usr/share/openshift/examples/infrastructure-templates/enterprise/metrics-deployer.yaml&lt;/code> or from &lt;a href="https://raw.githubusercontent.com/openshift/openshift-ansible/master/roles/openshift_examples/files/examples/v1.2/infrastructure-templates/enterprise/metrics-deployer.yaml">here&lt;/a>&lt;/p></description></item><item><title>Getting Started With RedHat Container Development Kit</title><link>http://guifreelife.com/blog/2016/06/16/Getting-Started-With-RedHat-Container-Development-Kit/</link><pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/06/16/Getting-Started-With-RedHat-Container-Development-Kit/</guid><description>&lt;p>The RedHat Container Developer Kit allows you to deploy OpenShift on your laptop for easier testing and development. Here is how to deploy it.&lt;/p>
&lt;p>&lt;a href="http://guifreelife.com/images/openshift-cdk-2.1.png">&lt;img src="http://guifreelife.com/images/thumb/openshift-cdk-2.1.png" alt="OpenShift CDK">&lt;/a>&lt;/p>
&lt;h1 id="register-as-a-redhat-developer">Register as a RedHat Developer&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://developers.redhat.com/">Obtain a RH login&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Place credentials in &lt;code>~/.vagrant.d/Vagrantfile&lt;/code> to enable updates for VMs by automatically registering with RedHat Subscription Manager&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">Vagrant&lt;/span>.configure(&lt;span style="color:#cd5555">&amp;#39;2&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">do&lt;/span> |config|
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config.registration.username = &lt;span style="color:#cd5555">&amp;#39;&amp;lt;your Red Hat username&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config.registration.password = &lt;span style="color:#cd5555">&amp;#39;&amp;lt;your Red Hat password&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="mac-os-x-prereqs">Mac OS X Prereqs&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>Install pre-reqs:&lt;/p></description></item><item><title>Upgrading OpenShift Enterprise from 3.1 to 3.2</title><link>http://guifreelife.com/blog/2016/05/17/OpenShift-Enterprise-Upgrade-3.1-to-3.2/</link><pubDate>Tue, 17 May 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/05/17/OpenShift-Enterprise-Upgrade-3.1-to-3.2/</guid><description>&lt;p>Upgrading from OSE 3.1 to 3.2 using the &lt;a href="https://github.com/openshift/openshift-ansible/blob/master/playbooks/common/openshift-cluster/upgrades/v3_1_to_v3_2/upgrade.yml">playbook&lt;/a> went quite well for me, but there were a few issues to sort out.&lt;/p>
&lt;p>The issues were related to:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ip-failover">ip failover&lt;/a> had to be updated manually&lt;/li>
&lt;li>there was about 5 minutes &lt;a href="#downtime-during-upgrade">downtime during the upgrade&lt;/a>&lt;/li>
&lt;li>&lt;a href="#image-stream-updates">updates to image streams&lt;/a>&lt;/li>
&lt;li>&lt;a href="#docker-errors">docker error messages&lt;/a>&lt;/li>
&lt;li>&lt;a href="#update-cluster-policies-and-roles">updated policy and role bindings&lt;/a> &lt;em>build strategy Source is not allowed&lt;/em>&lt;/li>
&lt;li>&lt;a href="#hawkular-metrics">hawkular metrics&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="upgrade-process">Upgrade Process&lt;/h1>
&lt;p>Following the directions is pretty straight forward.&lt;/p></description></item><item><title>Changing the SSL Certificate for OpenShift Console</title><link>http://guifreelife.com/blog/2016/03/24/Replace-OpenShift-Console-SSL-Certificate/</link><pubDate>Thu, 24 Mar 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/03/24/Replace-OpenShift-Console-SSL-Certificate/</guid><description>&lt;p>OpenShift has an internal CA for generating certificates to authenticate intra-cluster communication, but your browser doesn&amp;rsquo;t trust this CA. Perhaps you want to fix that without mucking with the internal SSL communication? I did. Here is how.&lt;/p>
&lt;p>This &lt;a href="https://docs.openshift.org/latest/install_config/certificate_customization.html">OpenShift doc&lt;/a> &lt;em>explains&lt;/em> how to do this, but it isn&amp;rsquo;t very clear, to me at least.&lt;/p>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;p>An outline of the steps:&lt;/p>
&lt;ul>
&lt;li>Only make changes to the public URLs and not any internal URLs.&lt;/li>
&lt;li>Create a &lt;code>namedCertificates&lt;/code> section in both &lt;code>/servingInfo&lt;/code> and &lt;code>/assetConfig/servingInfo&lt;/code> sections of &lt;code>/etc/origin/master/master-config.yaml&lt;/code>.&lt;/li>
&lt;li>In those repeated sections:
&lt;ul>
&lt;li>identify a certificate and key&lt;/li>
&lt;li>identify the hostname(s) to match with that cert/key pair&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Your installation may include the following hosts:&lt;/p></description></item><item><title>OpenShift High Availability - Routing</title><link>http://guifreelife.com/blog/2016/03/01/OpenShift-3-HA-Routing/</link><pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/03/01/OpenShift-3-HA-Routing/</guid><description>&lt;p>Highly availabile containers in OpenShift are baked into the cake thanks to &lt;a href="https://docs.openshift.com/enterprise/3.1/architecture/core_concepts/deployments.html#replication-controllers">replication controllers&lt;/a> and &lt;a href="https://docs.openshift.com/enterprise/3.1/architecture/core_concepts/pods_and_services.html#services">service load balancing&lt;/a>, but there are plenty of other single points of failure. Here is how to eliminate many of those.&lt;/p>
&lt;h1 id="single-points-of-failure">Single Points of Failure&lt;/h1>
&lt;p>The &lt;a href="https://docs.openshift.com/dedicated/3.1/architecture/infrastructure_components/kubernetes_infrastructure.html">components&lt;/a> of OpenShift include:&lt;/p>
&lt;ul>
&lt;li>Master controller manager server and API endpoint&lt;/li>
&lt;li>Etcd configuration and state storage&lt;/li>
&lt;li>Docker Registry&lt;/li>
&lt;li>Router haproxy&lt;/li>
&lt;/ul>
&lt;p>This post is mostly about adding high availability to the routing layer.&lt;/p></description></item><item><title>Ansible Playbook to Prepare for OpenShift Enterprise 3.1</title><link>http://guifreelife.com/blog/2015/12/12/Playbook-to-Prepare-for-OpenShift-Enterprise-3.1-Install/</link><pubDate>Sat, 12 Dec 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/12/12/Playbook-to-Prepare-for-OpenShift-Enterprise-3.1-Install/</guid><description>&lt;p>This playbook is written for RHEL 7.2 and OSE v3.1. It will perform the following steps which should take place before running the &lt;a href="https://github.com/openshift/openshift-ansible/blob/master/playbooks/byo/config.yml">openshift-ansible byo playbook&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>Install prerequisite RPMs like docker, python, etc.&lt;/li>
&lt;li>Persist the systemd journal for easier debugging&lt;/li>
&lt;li>Setup docker ephemeral storage on 2nd disk&lt;/li>
&lt;li>&lt;a href="https://docs.openshift.com/enterprise/3.1/admin_guide/overcommit.html#disable-swap-memory">Turn off swap&lt;/a>&lt;/li>
&lt;li>Enable use of NFS in selinux&lt;/li>
&lt;/ul>
&lt;h1 id="prerequisites">Prerequisites&lt;/h1>
&lt;p>See my &lt;a href="http://guifreelife.com/blog/2015/07/28/Testing-OpenShift-Enterprise-V3">Testing OpenShift Enterprise V3&lt;/a> post for the prereqs.&lt;/p>
&lt;h1 id="the-playbook">The Playbook&lt;/h1>
&lt;p>The lastest version is &lt;a href="https://github.com/dlbewley/playbook-openshift/blob/master/prep.yml">available here&lt;/a>.&lt;/p></description></item><item><title>Ansible CMDB Inventory and Facts Reporting</title><link>http://guifreelife.com/blog/2015/12/06/Ansible-CMDB-Inventory-and-Facts-Reporting/</link><pubDate>Sun, 06 Dec 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/12/06/Ansible-CMDB-Inventory-and-Facts-Reporting/</guid><description>&lt;p>You just deployed a complex multi-host app using Ansible. Wouldn&amp;rsquo;t it be helpful to see a overview of the deployment including hardware details?&lt;/p>
&lt;p>I just found &lt;a href="https://github.com/fboender/ansible-cmdb">ansible-cmdb&lt;/a> which combines info from the Ansible inventory and discovered facts to create a detailed HTML report akin to a Configuration Management Database.&lt;/p>
&lt;p>To use it in your playbook dir, just create a directory to hold facts discovered by the &lt;a href="http://docs.ansible.com/ansible/setup_module.html">setup module&lt;/a> then generate the report.&lt;/p></description></item><item><title>Notes on SNMP MIBs OIDs and Grey Whiskers</title><link>http://guifreelife.com/blog/2015/09/08/SNMP-OIDs/</link><pubDate>Tue, 08 Sep 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/09/08/SNMP-OIDs/</guid><description>&lt;p>With as many grey whiskers as I have, you would think I could grok SNMP in my sleep by now. Unfortunately, everytime I have to deal with it I get frustrated, wonder where the hell my notes from last time are, and start cursing. From now on, here are my notes!&lt;/p>
&lt;p>I&amp;rsquo;m typically using &lt;a href="http://www.zabbix.com/">Zabbix&lt;/a> to poll SNMP OIDs and place the MIBs on the Zabbix server or the Zabbix proxy responsible for SNMP in &lt;code>/usr/share/snmp/mibs&lt;/code>.&lt;/p></description></item><item><title>Testing OpenShift Enterprise V3</title><link>http://guifreelife.com/blog/2015/07/28/Testing-OpenShift-Enterprise-V3/</link><pubDate>Tue, 28 Jul 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/07/28/Testing-OpenShift-Enterprise-V3/</guid><description>&lt;p>So much for testing &lt;a href="http://guifreelife.com/blog/2015/06/28/Testing-Openshift-Origin-V3-with-Ansible-and-Vagrant-on-OS-X">OpenShift Origin with Vagrant on OS X&lt;/a>, because &lt;a href="https://github.com/openshift/openshift-ansible/issues/391">it does not work yet&lt;/a>. Let&amp;rsquo;s evaluate OpenShift Enterprise v3 on RHEL! First go get yourself an eval license. The OpenShift VMs will run RHEL7.1 and ride on top of &lt;a href="https://access.redhat.com/products/red-hat-enterprise-virtualization/">RHEV&lt;/a>.&lt;/p>
&lt;h1 id="documentation">Documentation&lt;/h1>
&lt;p>First off, here are some starting points to get oriented and acquainted with OpenShift.&lt;/p>
&lt;p>&lt;strong>Docs&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://access.redhat.com/products/openshift-enterprise-red-hat/get-started">Getting Started&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://access.redhat.com/documentation/en-US/OpenShift_Enterprise/">Docs&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://docs.openshift.com/enterprise/latest/admin_guide/overview.html">Overview&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/openshift/training">Training&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://install.openshift.com/">Download&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.openshift.com/enterprise/3.1/admin_guide/install/prerequisites.html">Prerequisites&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://access.redhat.com/articles/1755133">OpenShift Enterprise 3 Architecture Guide - planning, deployment and operation of an Open Source Platform as a Service&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Load_Balancer_Administration/ch-lvs-overview-VSA.html">Load Balancing&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Videos&lt;/strong>&lt;/p></description></item><item><title>Testing Openshift Origin V3 with Ansible and Vagrant on OS X</title><link>http://guifreelife.com/blog/2015/06/28/Testing-Openshift-Origin-V3-with-Ansible-and-Vagrant-on-OS-X/</link><pubDate>Sun, 28 Jun 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/06/28/Testing-Openshift-Origin-V3-with-Ansible-and-Vagrant-on-OS-X/</guid><description>&lt;p>The &lt;a href="http://www.openshift.org/">OpenShift Origin&lt;/a> project provides &lt;a href="http://www.ansible.com">Ansible&lt;/a> playbooks and roles for installing OpenShift on various infratructure. I&amp;rsquo;m going to try out the example using &lt;a href="http://www.vagrantup.com">Vagrant&lt;/a> and &lt;a href="https://www.virtualbox.org/">VirtualBox&lt;/a> on my Mac. I&amp;rsquo;m not very familiar with Vagrant or OpenShift v3 yet, so I&amp;rsquo;m just going to think out loud and see how it goes. I&amp;rsquo;ve also recently started &lt;a href="http://guifreelife.com/blog/2015/07/28/Testing-OpenShift-Enterprise-V3">testing OpenShift Enterprise&lt;/a>.&lt;/p>
&lt;h2 id="some-background">Some Background&lt;/h2>
&lt;p>OpenShift Origin is an opensource PaaS (platform as a service). It is the upstream project for Red Hat&amp;rsquo;s &lt;a href="https://www.openshift.com/">OpenShift Online&lt;/a> and &lt;a href="https://enterprise.openshift.com/">OpenShift Enterprise&lt;/a>. Version 3 of the OpenShift platform is a complete rewrite &lt;em>just&lt;/em> launched in June 2015. It now utilizes &lt;a href="http://www.docker.com">Docker&lt;/a> as the container engine and &lt;a href="http://kubernetes.io/">Kubernetes&lt;/a> as the orchestrator. The Enterprise edition uses &lt;a href="https://access.redhat.com/products/red-hat-atomic-enterprise-platform">Red Hat Atomic Enterprise Platform&lt;/a> as the underlying OS. The example used in this post will create Vagrant CentOS boxes.&lt;/p></description></item><item><title>How To Scale Up Ansible Playbooks and Roles in a Managable Way</title><link>http://guifreelife.com/blog/2015/05/16/Manage-Ansible-Playbooks-and-Roles/</link><pubDate>Sat, 16 May 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/05/16/Manage-Ansible-Playbooks-and-Roles/</guid><description>&lt;h1 id="ansible-is-awesome-ansible-is-a-mess">Ansible is Awesome! Ansible is a Mess!&lt;/h1>
&lt;p>So you found &lt;a href="http://www.ansible.com">Ansible&lt;/a>, and you were all Woah! Ansible is awesome! Ansibilize all the things! Then you created a git repo and started hacking.&lt;/p>
&lt;p>Playbooks look in the current directory to find roles, libraries, and inventories, so naturally you put everything in one big git repo, right?&lt;/p>
&lt;p>You tried to follow the &lt;a href="http://docs.ansible.com/playbooks_best_practices.html">best practices&lt;/a> for writing playbooks, you created &lt;a href="http://docs.ansible.com/playbooks_roles.html">roles&lt;/a>, and maybe you wrote a &lt;a href="http://docs.ansible.com/developing_plugins.html">filter plugin&lt;/a> or a &lt;a href="http://docs.ansible.com/developing_modules.html">custom module&lt;/a> for configuring an application unique to your environment. Eventually you wound up with a big repo of playbooks and inventory files and buried roles and realized there must be a better way to do this.&lt;/p></description></item><item><title>Resources for Learning About Docker</title><link>http://guifreelife.com/blog/2015/04/19/Resources-for-Learning-Docker/</link><pubDate>Sun, 19 Apr 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/04/19/Resources-for-Learning-Docker/</guid><description>&lt;h1 id="tutorials">Tutorials&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://docker.com/tryit/">Docker&amp;rsquo;s 10min Tutorial&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="http://docker.atbaker.me/exercises/exercise_0.html">Andrew Baker&amp;rsquo;s Introduction to Docker&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://github.com/RedHatWorkshops">Red Hat Workhops&lt;/a>&lt;/p>
&lt;p>&lt;em>Docker and Kubernetes Training - Christian Posta&lt;/em> &lt;a href="http://blog.christianposta.com/kubernetes/3-day-docker-and-kubernetes-training/">Blog&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://redhatworkshops.github.io/slides/docker/generated/intro.html">Intro&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://redhatworkshops.github.io/slides/docker/generated/day1.html">Day 1&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://redhatworkshops.github.io/slides/docker/generated/day2.html">Day 2&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://redhatworkshops.github.io/slides/docker/generated/day3.html">Day 3&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://redhatworkshops.github.io/slides/docker/generated/day4.html">Day 4&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h1 id="books">Books&lt;/h1>
&lt;p>As of April 2015, O&amp;rsquo;Reilly has at least 3 books on Docker pending publication. The first two are available in pre-release form now.&lt;/p>
&lt;ul>
&lt;li>&lt;img src="http://akamaicovers.oreilly.com/images/0636920035671/bkt.gif" alt="cover"> &lt;a href="http://shop.oreilly.com/product/0636920035671.do">Using Docker&lt;/a>
My exercises from the book: &lt;a href="https://github.com/dlbewley/identidock">identidock&lt;/a>&lt;/li>
&lt;li>&lt;img src="http://akamaicovers.oreilly.com/images/0636920036791/bkt.gif" alt="cover"> &lt;a href="http://shop.oreilly.com/product/0636920036791.do">Docker Cookbook&lt;/a>&lt;/li>
&lt;li>&lt;img src="http://akamaicovers.oreilly.com/images/0636920036142/bkt.gif" alt="cover"> &lt;a href="http://shop.oreilly.com/product/0636920036142.do">Docker: Up and Running&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="blogs">Blogs&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://blog.docker.com">Docker Blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.docker.com/docker-weekly-archives/">Docker Weekly Newsletter&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://rancher.com/blog/">Rancher Blog&lt;/a> posts some great overviews like &lt;a href="http://rancher.com/comparing-monitoring-options-for-docker-deployments/">this one&lt;/a> and &lt;a href="http://rancher.com/docker-monitoring-continued-prometheus-and-sysdig/">this one&lt;/a> on monitoring&lt;/li>
&lt;li>&lt;a href="https://clusterhq.com/blog/">ClusterHQ Blog&lt;/a> from makers of &lt;a href="https://docs.clusterhq.com/en/latest/gettingstarted/">Flocker&lt;/a> container live migration&lt;/li>
&lt;/ul>
&lt;h1 id="videos">Videos&lt;/h1>
&lt;ul>
&lt;li>&lt;img src="http://akamaicovers.oreilly.com/images/0636920035732/thumb.gif" alt="cover"> &lt;a href="http://shop.oreilly.com/product/0636920035732.do">O&amp;rsquo;Reilly Introduction to Docker&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Split an Ansible Git Repo and Retain the Commit History</title><link>http://guifreelife.com/blog/2015/03/15/Split-Ansible-Git-Repo-and-Retain-Commit-History/</link><pubDate>Sun, 15 Mar 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/03/15/Split-Ansible-Git-Repo-and-Retain-Commit-History/</guid><description>&lt;p>Starting with a jumbled git repo of various &lt;a href="http://www.ansible.com/">Ansible&lt;/a> roles, playbooks, inventories, group_vars, etc. I want to create a new repo out of a selection of the subdirectories and retain the commit history.&lt;/p>
&lt;p>I have an &lt;code>ansible-test&lt;/code> repo with a tree that looks roughly like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── adhoc/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── rolling-reboot.yml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── scripts/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── README.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── runtime/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── roles/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── foo-role/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   └── zimbra/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── ansible.cfg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── hosts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── tasks/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   └── ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── group_vars/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── foo-group
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   └── zimbra-prod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── hosts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── host_vars/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── library/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── foo-lib
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── zmlocalconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   └── zmprov
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── foo.yml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── zimbra-playbook.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I want to split that so that the Zimbra role, it&amp;rsquo;s playbook, and any &lt;em>&amp;lsquo;runtime&amp;rsquo;&lt;/em> context like group_vars, and libraries are managed together in a new repo called &lt;code>playbook-zimbra&lt;/code>.&lt;/p></description></item><item><title>Zimbra Exchange Web Services Crashes OS X Mail.app</title><link>http://guifreelife.com/blog/2015/02/17/Zimbra-Exchange-Web-Services-Crashes-OS-X-Mail.app/</link><pubDate>Tue, 17 Feb 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/02/17/Zimbra-Exchange-Web-Services-Crashes-OS-X-Mail.app/</guid><description>&lt;p>Zimbra &lt;a href="http://wiki.zimbra.com/wiki/Exchange_Web_Services_EWS">added EWS support&lt;/a> in ZCS 8.5. Right around that time OS X 10.10 was released. Cool! Let&amp;rsquo;s start syncing all our things to our brand new Mail.app, Calendar.app, and Contacts.app over HTTPS!&lt;/p>
&lt;p>Strangely, &lt;a href="https://wiki.zimbra.com/wiki/Ajcody-Apple-Mac-Issues#EWS_Configuration_And_ZCS_8.5.2B">this page&lt;/a> says that:&lt;/p>
&lt;blockquote>
&lt;p>ZCS 8.5 targeted EWS support ONLY with Outlook for Mac&amp;rsquo;s. There was no testing or expectation that the native mac apps would work with the EWS configuration type.&lt;/p>&lt;/blockquote>
&lt;p>Really?! I hope that&amp;rsquo;s not true. This &lt;a href="https://blog.zimbra.com/blog/archives/2014/08/zimbra-collaboration-8-5-anytime-anywhere-device.html">blog post&lt;/a> seems to concurr, unfortunately.&lt;/p></description></item><item><title>Tuning ext4 Creation and Mount Options for Zimbra</title><link>http://guifreelife.com/blog/2015/02/02/Ext4-Tuning-and-Mount-Options-for-Zimbra/</link><pubDate>Mon, 02 Feb 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/02/02/Ext4-Tuning-and-Mount-Options-for-Zimbra/</guid><description>&lt;p>&lt;a href="http://www.zimbra.com/">Zimbra&lt;/a> is a email collaboration suite. Its various compontents perform MTA duties, message store, full text indexing. In a large environment, the number of files and I/O operations can really add up. How we ensure the filesystem is ready to support it?&lt;/p>
&lt;h1 id="zimbras-recommendations">Zimbra&amp;rsquo;s Recommendations&lt;/h1>
&lt;p>Zimbra &lt;a href="http://wiki.zimbra.com/index.php?title=Performance_Tuning_Guidelines_for_Large_Deployments#File_System">offers some guidance&lt;/a> for tuning the filesystem, with tips like:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Mount file systems with the &lt;code>noatime&lt;/code> option.&lt;/p>
&lt;p>It generally is not important to know the last access time of all the files, so the extra write ops are wasteful.&lt;/p></description></item><item><title>Using Ansible Filters to Customize the Order Of Hosts in a List</title><link>http://guifreelife.com/blog/2015/02/01/Ansible-Customizing-Order-Of-Hosts-in-List/</link><pubDate>Sun, 01 Feb 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/02/01/Ansible-Customizing-Order-Of-Hosts-in-List/</guid><description>&lt;p>Zimbra is a email / collaboration suite that is typically deployed in a cluster or clusters of dedicated servers which fill roles like LDAP master, LDAP replica, Proxy, MTA, Mailstore, etc.&lt;/p>
&lt;p>The LDAP servers are used by all the other servers to store configuration and provisioning data. Servers in the cluster understand where to find the LDAP master (read/write) and LDAP replicas (read only) though values defined in &lt;code>/opt/zimbra/conf/localconfig.xml&lt;/code>.&lt;/p>
&lt;p>There are 2 values relevant to LDAP server lists and they have values like this:&lt;/p></description></item><item><title>Openshift V2 and Flask with Virtualenv on OS X</title><link>http://guifreelife.com/blog/2014/11/22/Openshift-and-Flask-with-Virtualenv-on-OS-X/</link><pubDate>Sat, 22 Nov 2014 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2014/11/22/Openshift-and-Flask-with-Virtualenv-on-OS-X/</guid><description>&lt;p>Create a flask app for Openshift with a matching local python virtualenv to perform local testing.&lt;/p>
&lt;p>In this case we&amp;rsquo;ll use Python 2.7 on Mac OS X 10.9.&lt;/p>
&lt;h2 id="overview-of-the-steps">Overview of the steps&lt;/h2>
&lt;ol>
&lt;li>Install &lt;a href="http://hackercodex.com/guide/mac-osx-mavericks-10.9-configuration/">Homebrew&lt;/a>&lt;/li>
&lt;li>Install &lt;a href="http://hackercodex.com/guide/python-development-environment-on-mac-osx/">Python Development Environment on Mac OS X&lt;/a>&lt;/li>
&lt;li>Install &lt;a href="https://www.openshift.com/developers/rhc-client-tools-install">rhc client tools&lt;/a>.&lt;/li>
&lt;li>Install &lt;a href="https://www.openshift.com/blogs/how-to-install-and-configure-a-python-flask-dev-environment-deploy-to-openshift">and Configure a Python Flask for OpenShift&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1 id="installing-homebrew">Installing Homebrew&lt;/h1>
&lt;h2 id="ready-the-system-for-homebrew">Ready the system for Homebrew&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>First unhide ~/Library folder.&lt;/p>
&lt;ol>
&lt;li>Open Finder&lt;/li>
&lt;li>Press &lt;em>shift-command-H&lt;/em>&lt;/li>
&lt;li>Press &lt;em>command-J&lt;/em>&lt;/li>
&lt;li>Check &lt;em>Show Library Folder&lt;/em>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>Now Setup shell environment
Some of these settings are only relevant to later steps, but go ahead and put them all in now.&lt;/p></description></item><item><title>Coming Soon</title><link>http://guifreelife.com/coming-soon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://guifreelife.com/coming-soon/</guid><description>&lt;h1 id="almost-there">Almost there!&lt;/h1>
&lt;p>Sorry, but this page is not yet ready.&lt;/p>
&lt;p>[&lt;img src="http://guifreelife.com/images/hammock-computer.jpg" alt="Hammock Computing">&lt;/p></description></item><item><title>Contact</title><link>http://guifreelife.com/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://guifreelife.com/contact/</guid><description>&lt;h2 id="credentials">Credentials&lt;/h2>
&lt;p>&lt;a href="https://rhtapps.redhat.com/verify?certId=180-184-699%22">Red Hat Certifications&lt;/a>&lt;/p>
&lt;p>&lt;div class="smaller" data-iframe-width="350" data-iframe-height="270" data-share-badge-id="34f9e344-4535-4932-8efe-d2dbdbdd0613" data-share-badge-host="https://www.credly.com">&lt;/div>&lt;script type="text/javascript" async src="//cdn.credly.com/assets/utilities/embed.js">&lt;/script>

&lt;div class="smaller" data-iframe-width="350" data-iframe-height="270" data-share-badge-id="014a0f69-8b9e-41d3-9362-6b799cdf3abb" data-share-badge-host="https://www.credly.com">&lt;/div>&lt;script type="text/javascript" async src="//cdn.credly.com/assets/utilities/embed.js">&lt;/script>

&lt;div class="smaller" data-iframe-width="350" data-iframe-height="270" data-share-badge-id="bf195f64-8fc8-4ef8-bb59-6630f9dde6d5" data-share-badge-host="https://www.credly.com">&lt;/div>&lt;script type="text/javascript" async src="//cdn.credly.com/assets/utilities/embed.js">&lt;/script>
&lt;/p></description></item><item><title>FAQ</title><link>http://guifreelife.com/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://guifreelife.com/faq/</guid><description>&lt;p>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.&lt;/p>
&lt;h2 id="1-what-to-do-if-i-have-still-not-received-the-order">1. WHAT TO DO IF I HAVE STILL NOT RECEIVED THE ORDER?&lt;/h2>
&lt;p>Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo.&lt;/p></description></item></channel></rss>