<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kubernetes on GUI Free Life</title><link>http://guifreelife.com/tags/kubernetes/</link><description>Recent content in kubernetes on GUI Free Life</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 29 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://guifreelife.com/tags/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Managing Readable OpenShift MachineConfigs with Butane</title><link>http://guifreelife.com/blog/2025/05/29/Managing-OpenShift-Machine-Configuration-with-Butane-and-Ignition/</link><pubDate>Thu, 29 May 2025 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2025/05/29/Managing-OpenShift-Machine-Configuration-with-Butane-and-Ignition/</guid><description>&lt;p>The OpenShift Machine Configuration Operator applies configuration changes to to nodes using a syntax called &lt;a href="https://coreos.github.io/ignition/specs/" title="CoreOS Ignition Spec">Ignition&lt;/a>,
but managing base64 encoded text can be challenging. What if I told you that you can use plain text and normal files?&lt;/p></description></item><item><title>Generate a Kubeconfig to Enable OpenShift Service Account Authentication</title><link>http://guifreelife.com/blog/2025/04/09/Kubeconfig-for-OpenShift-Service-Accounts/</link><pubDate>Wed, 09 Apr 2025 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2025/04/09/Kubeconfig-for-OpenShift-Service-Accounts/</guid><description>&lt;p>This post demonstrates how to properly generate kubeconfig files for OpenShift ServiceAccounts, enabling secure token-based authentication and TLS connections. You will learn how to create ServiceAccounts, generate time-limited tokens, bundle CA certificates, and package everything into a distributable kubeconfig file that can be stored as a Secret for download.&lt;/p></description></item><item><title>OpenShift Virtual Guest Tagging</title><link>http://guifreelife.com/blog/2025/01/02/OpenShift-Virtualization-VLAN-Guest-Tagging/</link><pubDate>Thu, 02 Jan 2025 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2025/01/02/OpenShift-Virtualization-VLAN-Guest-Tagging/</guid><description>&lt;p>Some workloads require the use of VLAN interfaces in virtual machines. VMware terms this feature &amp;ldquo;Virtual Guest Tagging&amp;rdquo; or &amp;ldquo;VLAN Guest Tagging&amp;rdquo; while OpenStack calls it &amp;ldquo;VLAN-aware instances&amp;rdquo;. See how OpenShift Virtualization can pass 802.1q trunks to VMs using a traditional Linux Bridge interface.&lt;/p></description></item><item><title>Open Virtual Networking Inspection with OpenShift</title><link>http://guifreelife.com/blog/2024/11/19/Open-Virtual-Network-Inspection-on-OpenShift/</link><pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2024/11/19/Open-Virtual-Network-Inspection-on-OpenShift/</guid><description>&lt;p>Accessing the details of the software defined networking features of OpenShift can be helpful for deeper troubleshooting or enhanced understanding. You&amp;rsquo;ll not find a full explanation of &lt;a href="https://www.ovn.org/en/" title="OpenVirtualNetwork">Open Virtual Network&lt;/a> or &lt;a href="https://ovn-kubernetes.io/" title="OVN-Kubernetes">OVN-Kubernetes&lt;/a> here, but you will learn how to quickly peer inside and investigate their inner workings.&lt;/p></description></item><item><title>Using Placements to Apply Open Cluster Management Policies to Kubernetes Clusters</title><link>http://guifreelife.com/blog/2024/03/11/Placing-Open-Cluster-Management-Policies-on-Kubernetes/</link><pubDate>Mon, 11 Mar 2024 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2024/03/11/Placing-Open-Cluster-Management-Policies-on-Kubernetes/</guid><description>&lt;p>&lt;a href="https://access.redhat.com/products/red-hat-advanced-cluster-management-for-kubernetes/" title="RHACM">Red Hat Advanced Cluster Management&lt;/a> (RHACM) enables Open Cluster Management policy driven governance of an entire fleet of Kubernetes clusters. Associating policies with the appropriate clusters is a very flexible operation and requires understanding resources like Placements and ManagedClusterSetBindings. So let&amp;rsquo;s get familiar!&lt;/p></description></item><item><title>Accessing the Ceph CLI with OpenShift Data Foundation</title><link>http://guifreelife.com/blog/2023/04/06/Accessing-Ceph-CLI-with-OpenShift-Data-Foundation/</link><pubDate>Thu, 06 Apr 2023 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2023/04/06/Accessing-Ceph-CLI-with-OpenShift-Data-Foundation/</guid><description>&lt;p>The Ceph Toolbox is not recommended or supported for use with OpenShift Data Foundation, but sometimes you want a client to troubleshoot with anyway.&lt;/p></description></item><item><title>Extracting TLS CA Certificates from Kubeconfig File</title><link>http://guifreelife.com/blog/2023/03/09/Extracting-CA-Certs-From-Kubeconfig/</link><pubDate>Thu, 09 Mar 2023 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2023/03/09/Extracting-CA-Certs-From-Kubeconfig/</guid><description>&lt;p>OpenShift creates a number of Certificate Authorities to sign TLS certificates which secure functions including load balancing of the API and Ingress services.
Recent versions of openshift-install will place all the CA certificates in the generated &lt;code>auth/kubeconfig&lt;/code> file.&lt;/p>
&lt;p>Here is how to extract and split those certificates into individual files which eases the process of trusting them particularly on a Mac.&lt;/p></description></item><item><title>Autoscaling OpenShift Workloads With Custom Prometheus Metrics</title><link>http://guifreelife.com/blog/2022/11/03/Autoscaling-OpenShift-Workloads-with-Custom-Prometheus-Metrics/</link><pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2022/11/03/Autoscaling-OpenShift-Workloads-with-Custom-Prometheus-Metrics/</guid><description>&lt;p>Kubernetes enables the automated scaling of applications to meet workload demands. Historically only memory and CPU consumption could be considered in scaling decisions, but the OpenShift Custom Metrics Autoscaler operator and KEDA remove that limitation. Read on to learn how OpenShift enables auto scaling based on the metrics that are important to your business.&lt;/p></description></item><item><title>Installing OpenShift on Azure for Windows Containers</title><link>http://guifreelife.com/blog/2021/05/18/OpenShift-Windows-Containers-part-1/</link><pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2021/05/18/OpenShift-Windows-Containers-part-1/</guid><description>&lt;p>Adding support for Windows nodes in your OpenShift cluster is a day 2 operation that requires preparation at install time.
It is important to accommodate the hybrid networking requirements for Windows Kubernetes nodes.
Azure specific tasks and gotchas are highlighted in this part 1 of 3 while laying the groundwork applicable to deploying OpenShift on any provider in preparation for managing Windows containers.&lt;/p></description></item><item><title>Load balancing of OpenShift HA Routers Mind the GARP</title><link>http://guifreelife.com/blog/2018/02/16/OpenShift-Router-LoadBalancing/</link><pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2018/02/16/OpenShift-Router-LoadBalancing/</guid><description>OpenShift HA Routing uses haproxy application routers to get traffic into the cluster. These application routers are made redundant by running ipfailover (keepalived) pods to maintain a set of Virtual IPs on each infrastructure node where the application routers run. These VIPs are then referenced by round robin DNS records to enable a measure of load balancing.
OK, so now you are load balancing at the network layer, but what about the link layer?</description></item><item><title>Installing OpenShift on OpenStack</title><link>http://guifreelife.com/blog/2017/08/20/OpenShift-on-OpenStack/</link><pubDate>Sun, 20 Aug 2017 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2017/08/20/OpenShift-on-OpenStack/</guid><description>This is a work in progress
The OpenShift Container Platform (OCP) can run on many types of infrastructure; from a Docker contrainer, to a single VM, to a fleet of baremetal or VMs on an infrastructure provider such as RHV, VMware, Amazon EC2, Google Compute Engine, or OpenStack Platform (OSP). This post is to document my experimentation with setting up OCP on OSP.
Doc Overview So where are the docs?</description></item><item><title>Configuring OpenShift with Multiple Sharded Routers</title><link>http://guifreelife.com/blog/2017/01/29/OpenShift-Multiple-Sharded-Routers/</link><pubDate>Sun, 29 Jan 2017 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2017/01/29/OpenShift-Multiple-Sharded-Routers/</guid><description>I needed to host a service that would be consumed by a closed client that insists on speaking HTTPS on port 50,000. To solve this, I added a 2nd router deployment and used the OpenShift router sharding feature to selectively enable routes on the 2nd router by way of selectors.
To summarize:
Existing HA router:
HTTP 80 HTTPS 443 Haproxy Stats 1,936 Added HA router:
HTTP 49,999 HTTPS 50,000 Haproxy Stats 51,936 How To Open infra node firewalls Open firewall on infra nodes where router will run to allow new http and https port iptables -A OS_FIREWALL_ALLOW -m tcp -p tcp --dport 49999 -j ACCEPT iptables -A OS_FIREWALL_ALLOW -m tcp -p tcp --dport 50000 -j ACCEPT This can also be done with Ansible and the os_firewall role in your playbook.</description></item><item><title>OpenShift Cluster Metrics and Cassandra Troubleshooting</title><link>http://guifreelife.com/blog/2016/11/14/OpenShift-Cluster-Metrics-and-Cassandra-Troubleshooting/</link><pubDate>Mon, 14 Nov 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/11/14/OpenShift-Cluster-Metrics-and-Cassandra-Troubleshooting/</guid><description>OpenShift gathers cluster metrics such as CPU, memory, and network bandwidth per pod which can assist in troubleshooting and capacity planning. The metrics are also used to support horizontal pod autoscaling, which makes the metrics service not just helpful, but critical to operation.
Missing Liveness Probes There are 3 major components in the metrics collection process. Heapster gathers stats from Docker and feeds them to Hawkular Metrics to tuck away for safe keeping in Cassandra.</description></item><item><title>Deploy Hawkular Metrics in CDK 2.1 OpenShift 3.2</title><link>http://guifreelife.com/blog/2016/06/16/Deploy-Hawkular-Metrics-in-CDK-2.0-OpenShift-3.1/</link><pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/06/16/Deploy-Hawkular-Metrics-in-CDK-2.0-OpenShift-3.1/</guid><description>Update! I failed with CDK 2.0, but CDK 2.1 works with some fiddling.
In my last post I installed Red Hat Container Developer Kit to deploy OpenShift Enterprise using Vagrant. But now I want to add Hawkular Metrics to that deployment.
Deploy Metrics Refer to the docs for deploying metrics in OSE.
Login to the vagrant CDK VM before continuing
$ cd ~/cdk/components/rhel/rhel-ose/ $ vagrant ssh $ oc login Authentication required for https://127.</description></item><item><title>Getting Started With RedHat Container Development Kit</title><link>http://guifreelife.com/blog/2016/06/16/Getting-Started-With-RedHat-Container-Development-Kit/</link><pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/06/16/Getting-Started-With-RedHat-Container-Development-Kit/</guid><description>The RedHat Container Developer Kit allows you to deploy OpenShift on your laptop for easier testing and development. Here is how to deploy it.
Register as a RedHat Developer Obtain a RH login
Place credentials in ~/.vagrant.d/Vagrantfile to enable updates for VMs by automatically registering with RedHat Subscription Manager
Vagrant.configure(&amp;#39;2&amp;#39;) do |config| config.registration.username = &amp;#39;&amp;lt;your Red Hat username&amp;gt;&amp;#39; config.registration.password = &amp;#39;&amp;lt;your Red Hat password&amp;gt;&amp;#39; end Mac OS X Prereqs Install pre-reqs:</description></item><item><title>Upgrading OpenShift Enterprise from 3.1 to 3.2</title><link>http://guifreelife.com/blog/2016/05/17/OpenShift-Enterprise-Upgrade-3.1-to-3.2/</link><pubDate>Tue, 17 May 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/05/17/OpenShift-Enterprise-Upgrade-3.1-to-3.2/</guid><description>Upgrading from OSE 3.1 to 3.2 using the playbook went quite well for me, but there were a few issues to sort out.
The issues were related to:
ip failover had to be updated manually there was about 5 minutes downtime during the upgrade updates to image streams docker error messages updated policy and role bindings build strategy Source is not allowed hawkular metrics Upgrade Process Following the directions is pretty straight forward.</description></item><item><title>Changing the SSL Certificate for OpenShift Console</title><link>http://guifreelife.com/blog/2016/03/24/Replace-OpenShift-Console-SSL-Certificate/</link><pubDate>Thu, 24 Mar 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/03/24/Replace-OpenShift-Console-SSL-Certificate/</guid><description>OpenShift has an internal CA for generating certificates to authenticate intra-cluster communication, but your browser doesn&amp;rsquo;t trust this CA. Perhaps you want to fix that without mucking with the internal SSL communication? I did. Here is how.
This OpenShift doc explains how to do this, but it isn&amp;rsquo;t very clear, to me at least.
Overview An outline of the steps:
Only make changes to the public URLs and not any internal URLs.</description></item><item><title>OpenShift High Availability - Routing</title><link>http://guifreelife.com/blog/2016/03/01/OpenShift-3-HA-Routing/</link><pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/03/01/OpenShift-3-HA-Routing/</guid><description>Highly availabile containers in OpenShift are baked into the cake thanks to replication controllers and service load balancing, but there are plenty of other single points of failure. Here is how to eliminate many of those.
Single Points of Failure The components of OpenShift include:
Master controller manager server and API endpoint Etcd configuration and state storage Docker Registry Router haproxy This post is mostly about adding high availability to the routing layer.</description></item></channel></rss>