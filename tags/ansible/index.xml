<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ansible on GUI Free Life</title><link>http://guifreelife.com/tags/ansible/</link><description>Recent content in Ansible on GUI Free Life</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 30 Oct 2018 00:00:00 +0000</lastBuildDate><atom:link href="http://guifreelife.com/tags/ansible/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating OpenStack Provider Network for Use by a Single Project</title><link>http://guifreelife.com/blog/2018/10/30/OpenStack-Private-Provider-Network/</link><pubDate>Tue, 30 Oct 2018 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2018/10/30/OpenStack-Private-Provider-Network/</guid><description>&lt;p>OpenStack supports &lt;a href="https://docs.openstack.org/install-guide/launch-instance-networks-provider.html">&amp;ldquo;provider&amp;rdquo; networks&lt;/a>, which are networks that pre-exist in your physical infrastructure and are &amp;ldquo;provided&amp;rdquo; to the cloud users rather than created by the user. Only an admin is permitted to create a provider network.&lt;/p>
&lt;p>A prequisite is the provider network must be plumbed to the external bridge on your controller and nova nodes.&lt;/p>
&lt;p>Here is an Ansible playbook to create a project, place a unshared provider network and subnet in that project. Afterwards we will grant access to the members of this project using the openstack client. It &lt;a href="https://docs.ansible.com/ansible/latest/modules/list_of_cloud_modules.html#openstack">does not appear&lt;/a> that Ansible has a OpenStack network RBAC module at this time.&lt;/p></description></item><item><title>Ansible Playbook to Prepare for OpenShift Enterprise 3.1</title><link>http://guifreelife.com/blog/2015/12/12/Playbook-to-Prepare-for-OpenShift-Enterprise-3.1-Install/</link><pubDate>Sat, 12 Dec 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/12/12/Playbook-to-Prepare-for-OpenShift-Enterprise-3.1-Install/</guid><description>&lt;p>This playbook is written for RHEL 7.2 and OSE v3.1. It will perform the following steps which should take place before running the &lt;a href="https://github.com/openshift/openshift-ansible/blob/master/playbooks/byo/config.yml">openshift-ansible byo playbook&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>Install prerequisite RPMs like docker, python, etc.&lt;/li>
&lt;li>Persist the systemd journal for easier debugging&lt;/li>
&lt;li>Setup docker ephemeral storage on 2nd disk&lt;/li>
&lt;li>&lt;a href="https://docs.openshift.com/enterprise/3.1/admin_guide/overcommit.html#disable-swap-memory">Turn off swap&lt;/a>&lt;/li>
&lt;li>Enable use of NFS in selinux&lt;/li>
&lt;/ul>
&lt;h1 id="prerequisites">Prerequisites&lt;/h1>
&lt;p>See my &lt;a href="http://guifreelife.com/blog/2015/07/28/Testing-OpenShift-Enterprise-V3">Testing OpenShift Enterprise V3&lt;/a> post for the prereqs.&lt;/p>
&lt;h1 id="the-playbook">The Playbook&lt;/h1>
&lt;p>The lastest version is &lt;a href="https://github.com/dlbewley/playbook-openshift/blob/master/prep.yml">available here&lt;/a>.&lt;/p></description></item><item><title>Ansible CMDB Inventory and Facts Reporting</title><link>http://guifreelife.com/blog/2015/12/06/Ansible-CMDB-Inventory-and-Facts-Reporting/</link><pubDate>Sun, 06 Dec 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/12/06/Ansible-CMDB-Inventory-and-Facts-Reporting/</guid><description>&lt;p>You just deployed a complex multi-host app using Ansible. Wouldn&amp;rsquo;t it be helpful to see a overview of the deployment including hardware details?&lt;/p>
&lt;p>I just found &lt;a href="https://github.com/fboender/ansible-cmdb">ansible-cmdb&lt;/a> which combines info from the Ansible inventory and discovered facts to create a detailed HTML report akin to a Configuration Management Database.&lt;/p>
&lt;p>To use it in your playbook dir, just create a directory to hold facts discovered by the &lt;a href="http://docs.ansible.com/ansible/setup_module.html">setup module&lt;/a> then generate the report.&lt;/p></description></item><item><title>Testing Openshift Origin V3 with Ansible and Vagrant on OS X</title><link>http://guifreelife.com/blog/2015/06/28/Testing-Openshift-Origin-V3-with-Ansible-and-Vagrant-on-OS-X/</link><pubDate>Sun, 28 Jun 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/06/28/Testing-Openshift-Origin-V3-with-Ansible-and-Vagrant-on-OS-X/</guid><description>&lt;p>The &lt;a href="http://www.openshift.org/">OpenShift Origin&lt;/a> project provides &lt;a href="http://www.ansible.com">Ansible&lt;/a> playbooks and roles for installing OpenShift on various infratructure. I&amp;rsquo;m going to try out the example using &lt;a href="http://www.vagrantup.com">Vagrant&lt;/a> and &lt;a href="https://www.virtualbox.org/">VirtualBox&lt;/a> on my Mac. I&amp;rsquo;m not very familiar with Vagrant or OpenShift v3 yet, so I&amp;rsquo;m just going to think out loud and see how it goes. I&amp;rsquo;ve also recently started &lt;a href="http://guifreelife.com/blog/2015/07/28/Testing-OpenShift-Enterprise-V3">testing OpenShift Enterprise&lt;/a>.&lt;/p>
&lt;h2 id="some-background">Some Background&lt;/h2>
&lt;p>OpenShift Origin is an opensource PaaS (platform as a service). It is the upstream project for Red Hat&amp;rsquo;s &lt;a href="https://www.openshift.com/">OpenShift Online&lt;/a> and &lt;a href="https://enterprise.openshift.com/">OpenShift Enterprise&lt;/a>. Version 3 of the OpenShift platform is a complete rewrite &lt;em>just&lt;/em> launched in June 2015. It now utilizes &lt;a href="http://www.docker.com">Docker&lt;/a> as the container engine and &lt;a href="http://kubernetes.io/">Kubernetes&lt;/a> as the orchestrator. The Enterprise edition uses &lt;a href="https://access.redhat.com/products/red-hat-atomic-enterprise-platform">Red Hat Atomic Enterprise Platform&lt;/a> as the underlying OS. The example used in this post will create Vagrant CentOS boxes.&lt;/p></description></item><item><title>How To Scale Up Ansible Playbooks and Roles in a Managable Way</title><link>http://guifreelife.com/blog/2015/05/16/Manage-Ansible-Playbooks-and-Roles/</link><pubDate>Sat, 16 May 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/05/16/Manage-Ansible-Playbooks-and-Roles/</guid><description>&lt;h1 id="ansible-is-awesome-ansible-is-a-mess">Ansible is Awesome! Ansible is a Mess!&lt;/h1>
&lt;p>So you found &lt;a href="http://www.ansible.com">Ansible&lt;/a>, and you were all Woah! Ansible is awesome! Ansibilize all the things! Then you created a git repo and started hacking.&lt;/p>
&lt;p>Playbooks look in the current directory to find roles, libraries, and inventories, so naturally you put everything in one big git repo, right?&lt;/p>
&lt;p>You tried to follow the &lt;a href="http://docs.ansible.com/playbooks_best_practices.html">best practices&lt;/a> for writing playbooks, you created &lt;a href="http://docs.ansible.com/playbooks_roles.html">roles&lt;/a>, and maybe you wrote a &lt;a href="http://docs.ansible.com/developing_plugins.html">filter plugin&lt;/a> or a &lt;a href="http://docs.ansible.com/developing_modules.html">custom module&lt;/a> for configuring an application unique to your environment. Eventually you wound up with a big repo of playbooks and inventory files and buried roles and realized there must be a better way to do this.&lt;/p></description></item><item><title>Split an Ansible Git Repo and Retain the Commit History</title><link>http://guifreelife.com/blog/2015/03/15/Split-Ansible-Git-Repo-and-Retain-Commit-History/</link><pubDate>Sun, 15 Mar 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/03/15/Split-Ansible-Git-Repo-and-Retain-Commit-History/</guid><description>&lt;p>Starting with a jumbled git repo of various &lt;a href="http://www.ansible.com/">Ansible&lt;/a> roles, playbooks, inventories, group_vars, etc. I want to create a new repo out of a selection of the subdirectories and retain the commit history.&lt;/p>
&lt;p>I have an &lt;code>ansible-test&lt;/code> repo with a tree that looks roughly like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── adhoc/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── rolling-reboot.yml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── scripts/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── README.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── runtime/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── roles/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── foo-role/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   └── zimbra/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── ansible.cfg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── hosts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── tasks/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   └── ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── group_vars/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── foo-group
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   └── zimbra-prod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── hosts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── host_vars/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── library/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── foo-lib
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   ├── zmlocalconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> │   └── zmprov
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── foo.yml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── zimbra-playbook.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I want to split that so that the Zimbra role, it&amp;rsquo;s playbook, and any &lt;em>&amp;lsquo;runtime&amp;rsquo;&lt;/em> context like group_vars, and libraries are managed together in a new repo called &lt;code>playbook-zimbra&lt;/code>.&lt;/p></description></item><item><title>Tuning ext4 Creation and Mount Options for Zimbra</title><link>http://guifreelife.com/blog/2015/02/02/Ext4-Tuning-and-Mount-Options-for-Zimbra/</link><pubDate>Mon, 02 Feb 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/02/02/Ext4-Tuning-and-Mount-Options-for-Zimbra/</guid><description>&lt;p>&lt;a href="http://www.zimbra.com/">Zimbra&lt;/a> is a email collaboration suite. Its various compontents perform MTA duties, message store, full text indexing. In a large environment, the number of files and I/O operations can really add up. How we ensure the filesystem is ready to support it?&lt;/p>
&lt;h1 id="zimbras-recommendations">Zimbra&amp;rsquo;s Recommendations&lt;/h1>
&lt;p>Zimbra &lt;a href="http://wiki.zimbra.com/index.php?title=Performance_Tuning_Guidelines_for_Large_Deployments#File_System">offers some guidance&lt;/a> for tuning the filesystem, with tips like:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Mount file systems with the &lt;code>noatime&lt;/code> option.&lt;/p>
&lt;p>It generally is not important to know the last access time of all the files, so the extra write ops are wasteful.&lt;/p></description></item><item><title>Using Ansible Filters to Customize the Order Of Hosts in a List</title><link>http://guifreelife.com/blog/2015/02/01/Ansible-Customizing-Order-Of-Hosts-in-List/</link><pubDate>Sun, 01 Feb 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/02/01/Ansible-Customizing-Order-Of-Hosts-in-List/</guid><description>&lt;p>Zimbra is a email / collaboration suite that is typically deployed in a cluster or clusters of dedicated servers which fill roles like LDAP master, LDAP replica, Proxy, MTA, Mailstore, etc.&lt;/p>
&lt;p>The LDAP servers are used by all the other servers to store configuration and provisioning data. Servers in the cluster understand where to find the LDAP master (read/write) and LDAP replicas (read only) though values defined in &lt;code>/opt/zimbra/conf/localconfig.xml&lt;/code>.&lt;/p>
&lt;p>There are 2 values relevant to LDAP server lists and they have values like this:&lt;/p></description></item></channel></rss>