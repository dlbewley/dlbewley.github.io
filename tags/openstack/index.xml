<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>openstack on dwnwrd Universal</title><link>https://dwnwrd.github.io/tags/openstack/</link><description>Recent content in openstack on dwnwrd Universal</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 15 Feb 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://dwnwrd.github.io/tags/openstack/index.xml" rel="self" type="application/rss+xml"/><item><title>OpenShift 4 on OpenStack Networking and Installation</title><link>https://dwnwrd.github.io/blog/2020/02/15/OpenShift-4-on-OpenStack-Networking-and-Installation/</link><pubDate>Sat, 15 Feb 2020 00:00:00 +0000</pubDate><guid>https://dwnwrd.github.io/blog/2020/02/15/OpenShift-4-on-OpenStack-Networking-and-Installation/</guid><description>OpenShift Containter Platform 4 is much more like Tectonic than OpenShift 3. Particularly when it comes to installation and node management. Rather then building machines and running an Ansible playbook to configure them you now have the option of setting a fewer paramters in an install config running an installer to build and configure the cluster from scratch.
I would like to illustrate how the basics of the networking might look when installing OpenShift on OpenStack.</description></item><item><title>How to Create and Use OpenStack Heat Orchestration Templates Part 1</title><link>https://dwnwrd.github.io/blog/2018/11/21/OpenStack-Heat-Orchestration-Templates-Howto-Part-1/</link><pubDate>Wed, 21 Nov 2018 00:00:00 +0000</pubDate><guid>https://dwnwrd.github.io/blog/2018/11/21/OpenStack-Heat-Orchestration-Templates-Howto-Part-1/</guid><description>OpenStack enables automated creation of resources such as networks, routers, and servers using Heat Orchestration Templates. If you are new to OpenStack and are using a TripleO based distribution you may have seen them up close and personal without knowing it. What follows is a very basic exploration of Heat.
Heat templates are written in YAML format, and you can quickly see from the documentation that a basic template will likely have 4 sections:</description></item><item><title>Creating OpenStack Provider Network for Use by a Single Project</title><link>https://dwnwrd.github.io/blog/2018/10/30/OpenStack-Private-Provider-Network/</link><pubDate>Tue, 30 Oct 2018 00:00:00 +0000</pubDate><guid>https://dwnwrd.github.io/blog/2018/10/30/OpenStack-Private-Provider-Network/</guid><description>OpenStack supports &amp;ldquo;provider&amp;rdquo; networks, which are networks that pre-exist in your physical infrastructure and are &amp;ldquo;provided&amp;rdquo; to the cloud users rather than created by the user. Only an admin is permitted to create a provider network.
A prequisite is the provider network must be plumbed to the external bridge on your controller and nova nodes.
Here is an Ansible playbook to create a project, place a unshared provider network and subnet in that project.</description></item><item><title>Installing OpenShift on OpenStack</title><link>https://dwnwrd.github.io/blog/2017/08/20/OpenShift-on-OpenStack/</link><pubDate>Sun, 20 Aug 2017 00:00:00 +0000</pubDate><guid>https://dwnwrd.github.io/blog/2017/08/20/OpenShift-on-OpenStack/</guid><description>This is a work in progress
The OpenShift Container Platform (OCP) can run on many types of infrastructure; from a Docker contrainer, to a single VM, to a fleet of baremetal or VMs on an infrastructure provider such as RHV, VMware, Amazon EC2, Google Compute Engine, or OpenStack Platform (OSP). This post is to document my experimentation with setting up OCP on OSP.
Doc Overview So where are the docs?</description></item><item><title>OpenStack Network Diagram</title><link>https://dwnwrd.github.io/blog/2017/08/14/OpenStack-Network-Diagram/</link><pubDate>Mon, 14 Aug 2017 00:00:00 +0000</pubDate><guid>https://dwnwrd.github.io/blog/2017/08/14/OpenStack-Network-Diagram/</guid><description>What does the networking for OpenStack look like? Maybe something like this.
# Network VLAN IP CIDR N1 Provisioning (PXE) V:310 172.23.32.0/20 N2 Internal API V:311 172.23.21.0/24 N3 Storage Network (Front) V:312 172.23.22.0/24 N4 Storage Mgmt (Back) V:313 172.23.23.0/24 N5 External Floating IPs V:179 192.0.179.0/24 N6 Public API V:177 192.0.177.0/24 N7 Overcloud Provisioning (Tenant PXE) V:314 172.</description></item></channel></rss>