<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OCP3 on GUI Free Life</title><link>http://guifreelife.com/tags/OCP3/</link><description>Recent content in OCP3 on GUI Free Life</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 09 May 2019 00:00:00 +0000</lastBuildDate><atom:link href="http://guifreelife.com/tags/OCP3/index.xml" rel="self" type="application/rss+xml"/><item><title>Playbook to replace bootstrap.kubeconfig and node certificates on OpenShift 3.10 3.11</title><link>http://guifreelife.com/blog/2019/05/09/Replace-Bootstrap-Kubeconfig/</link><pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2019/05/09/Replace-Bootstrap-Kubeconfig/</guid><description>&lt;p>If you are a serial upgrader like me, you may have found that at one point during your 3.10.xx patching (say 3.10.119) you hit this error during the data plane upgrade:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plain" data-lang="plain">&lt;span style="display:flex;">&lt;span>TASK [openshift_node : Approve the node] ************************************************************
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>task path: /usr/share/ansible/openshift-ansible/roles/openshift_node/tasks/upgrade/restart.yml:49
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using module file /usr/share/ansible/openshift-ansible/roles/lib_openshift/library/oc_csr_approve.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FAILED - RETRYING: Approve the node (30 retries left).Result was: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;all_subjects_found&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;attempts&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;changed&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;client_approve_results&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;client_csrs&amp;#34;: {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;failed&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;invocation&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;module_args&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;node_list&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ose-test-node-01.example.com&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;oc_bin&amp;#34;: &amp;#34;oc&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;oc_conf&amp;#34;: &amp;#34;/etc/origin/master/admin.kubeconfig&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;msg&amp;#34;: &amp;#34;Could not find csr for nodes: ose-test-node-01.example.com&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Turns out this was because the start up of &lt;code>atomic-openshift-node&lt;/code> failed to generate a CSR.&lt;/p></description></item><item><title>Downgrade Etcd 3.3.11 to 3.2.22 for OpenShift Compatibility</title><link>http://guifreelife.com/blog/2019/02/19/Downgrade-Etcd-for-OpenShift-Compatibility/</link><pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2019/02/19/Downgrade-Etcd-for-OpenShift-Compatibility/</guid><description>&lt;p>While I was working on &lt;a href="http://guifreelife.com/blog/2019/02/08/Migration-of-Etcd-to-Masters-for-OpenShift-3.9-Upgrade-to-3.10">migrating etcd to my master nodes&lt;/a> I was bitten by an incompatible etcd v3.3.11 RPM made available via RHEL Server Extras repo. Before I got to my last master the RPM was no longer available, and the scaleup playbook failed. I became aware that 3.3.11 &lt;a href="https://access.redhat.com/articles/2176281">is not compatible&lt;/a> and &lt;a href="https://access.redhat.com/solutions/3885101">should not have been made available&lt;/a>.&lt;/p>
&lt;p>Unfortunately all members of my etcd cluster were already upgraded and the fix is to take down the cluster, downgrade etcd, and restore from snapshot. It would be great &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1672518">if the etcd version was pinned&lt;/a> like Docker is.&lt;/p></description></item><item><title>Migration of Etcd to Masters for OpenShift 3.9 to 3.10 Upgrade</title><link>http://guifreelife.com/blog/2019/02/08/Migration-of-Etcd-to-Masters-for-OpenShift-3.9-Upgrade-to-3.10/</link><pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2019/02/08/Migration-of-Etcd-to-Masters-for-OpenShift-3.9-Upgrade-to-3.10/</guid><description>&lt;p>As of OpenShift Container Platform 3.10 etcd is expected to run in &lt;a href="https://docs.openshift.com/container-platform/3.10/release_notes/ocp_3_10_release_notes.html#ocp-310-control-plane-changes">static pods&lt;/a> on the master nodes in the control plane. You may have a deployed an HA cluster with dedicated etcd nodes managed with systemd. How do you migrate the this new architecture?&lt;/p>
&lt;p>&lt;strong>Assumptions:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>You are running OCP 3.9&lt;/li>
&lt;li>You have multiple Master nodes&lt;/li>
&lt;li>You have dedicated Etcd nodes&lt;/li>
&lt;li>You are running RHEL, not Atomic nodes&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Outline:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Backup etcd&lt;/li>
&lt;li>Scale up Etcd cluster to include Master nodes&lt;/li>
&lt;li>Configure Openshift Masters to ignore the old Etcd nodes&lt;/li>
&lt;li>Scale down etcd cluster to remove old Etcd nodes&lt;/li>
&lt;/ul>
&lt;h1 id="detailed-steps">Detailed Steps&lt;/h1>
&lt;p>Follow along in this document &lt;a href="https://docs.openshift.com/container-platform/3.9/admin_guide/assembly_replace-etcd-member.html">https://docs.openshift.com/container-platform/3.9/admin_guide/assembly_replace-etcd-member.html&lt;/a>
You may find &lt;a href="http://guifreelife.com/blog/2019/02/08/Etcd-Shortcut-With-Peer-Auth">some etcd aliases handy&lt;/a> before proceeding.&lt;/p></description></item><item><title>OpenShift 3.6 Upgrade Metrics Fails Missing heapster-certs Secret</title><link>http://guifreelife.com/blog/2017/10/13/OpenShift-3.6-Upgrade-Metrics-Fails-Missing-heapster-certs-Secret/</link><pubDate>Fri, 13 Oct 2017 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2017/10/13/OpenShift-3.6-Upgrade-Metrics-Fails-Missing-heapster-certs-Secret/</guid><description>&lt;p>After your upgrade to OpenShift v3.6 did the &lt;a href="https://docs.openshift.com/container-platform/3.6/install_config/cluster_metrics.html">deployment of cluster metrics&lt;/a> wind up with empty graphs? Check if the heapster pod failed to start due to a missing secret called &lt;code>heapster-certs&lt;/code> in the &lt;code>openshift-infra&lt;/code> namespace.&lt;/p>
&lt;h1 id="problem">Problem&lt;/h1>
&lt;p>&lt;strong>Heapster pod is failing to start&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ oc get pods
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME READY STATUS RESTARTS AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hawkular-cassandra-1-l1f3s 1/1 Running &lt;span style="color:#b452cd">0&lt;/span> 9m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hawkular-metrics-rdl07 1/1 Running &lt;span style="color:#b452cd">0&lt;/span> 9m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>heapster-cfpcj 0/1 ContainerCreating &lt;span style="color:#b452cd">0&lt;/span> 3m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Check what volumes it is attempting to mount&lt;/strong>&lt;/p></description></item><item><title>Automated Pruning of OpenShift Artifacts; Builds, Deploys, Images</title><link>http://guifreelife.com/blog/2017/03/22/Automated-OpenShift-Artifact-Pruning/</link><pubDate>Wed, 22 Mar 2017 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2017/03/22/Automated-OpenShift-Artifact-Pruning/</guid><description>&lt;p>After running openshift for a while I discovered that letting builds pile up to around to around 1,200 led to what was essentially a deadlock in the scheduling of new builds. New builds were stuck in a &lt;em>New, waiting&lt;/em> state indefinitely.&lt;/p>
&lt;p>This &lt;a href="https://github.com/openshift/origin/pull/12623">was fixed&lt;/a> as of OCP 3.4.1, but it caused me to get more pro-active in the &lt;a href="https://docs.openshift.org/latest/admin_guide/pruning_resources.html">pruning of artifacts&lt;/a> within OpenShift.&lt;/p>
&lt;p>I threw together a script and a playbook to deploy it. YMMV&lt;/p></description></item><item><title>Configuring OpenShift with Multiple Sharded Routers</title><link>http://guifreelife.com/blog/2017/01/29/OpenShift-Multiple-Sharded-Routers/</link><pubDate>Sun, 29 Jan 2017 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2017/01/29/OpenShift-Multiple-Sharded-Routers/</guid><description>&lt;p>I needed to host a service that would be consumed by a &lt;a href="http://www.teradici.com/">closed client&lt;/a> that insists on speaking HTTPS on port 50,000. To solve this, I added a 2nd router deployment and used the OpenShift router sharding feature to selectively enable routes on the 2nd router by way of selectors.&lt;/p>
&lt;p>To summarize:&lt;/p>
&lt;p>&lt;em>&lt;a href="http://guifreelife.com/blog/2016/03/01/OpenShift-3-HA-Routing">Existing HA router&lt;/a>:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>HTTP 80&lt;/li>
&lt;li>HTTPS 443&lt;/li>
&lt;li>Haproxy Stats 1,936&lt;/li>
&lt;/ul>
&lt;p>&lt;em>Added HA router:&lt;/em>&lt;/p>
&lt;ul>
&lt;li>HTTP 49,999&lt;/li>
&lt;li>HTTPS 50,000&lt;/li>
&lt;li>Haproxy Stats 51,936&lt;/li>
&lt;/ul>
&lt;h1 id="how-to">How To&lt;/h1>
&lt;h2 id="open-infra-node-firewalls">Open infra node firewalls&lt;/h2>
&lt;ul>
&lt;li>Open firewall on infra nodes where router will run to allow new http and https port&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> iptables -A OS_FIREWALL_ALLOW -m tcp -p tcp --dport &lt;span style="color:#b452cd">49999&lt;/span> -j ACCEPT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iptables -A OS_FIREWALL_ALLOW -m tcp -p tcp --dport &lt;span style="color:#b452cd">50000&lt;/span> -j ACCEPT
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>This can also be done with Ansible and the &lt;a href="https://github.com/openshift/openshift-ansible/tree/master/roles/os_firewall">os_firewall role&lt;/a> in your playbook. (&lt;em>untested&lt;/em>)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#8b008b;font-weight:bold">hosts&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>infra-nodes&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">vars&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">os_firewall_use_firewalld&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">False&lt;/span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">os_firewall_allow&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#8b008b;font-weight:bold">service&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>teradici-http&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">port&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#b452cd">49999&lt;/span>/tcp&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- &lt;span style="color:#8b008b;font-weight:bold">service&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>teradici-https&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">port&lt;/span>:&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#b452cd">50000&lt;/span>/tcp&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#8b008b;font-weight:bold">roles&lt;/span>:&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#bbb"> &lt;/span>- os_firewall&lt;span style="color:#bbb">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-a-router">Create a router&lt;/h2>
&lt;ul>
&lt;li>Create a router called &lt;em>ha-router-teradici&lt;/em> with &lt;code>oa adm router&lt;/code> or &lt;code>oadm router&lt;/code> on these ports and also make sure the stats port does not clash with existing router on port 1936&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>[root@ose-test-master-01 ~]&lt;span style="color:#228b22"># oc get nodes --show-labels&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME STATUS AGE LABELS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ose-test-master-01.example.com Ready 180d kubernetes.io/hostname=ose-test-master-01.example.com,region=master,zone=rhev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ose-test-master-02.example.com Ready 180d kubernetes.io/hostname=ose-test-master-02.example.com,region=master,zone=rhev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ose-test-node-01.example.com Ready 180d ha-router=primary,kubernetes.io/hostname=ose-test-node-01.example.com,region=infra,zone=rhev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ose-test-node-02.example.com Ready 180d ha-router=primary,kubernetes.io/hostname=ose-test-node-02.example.com,region=infra,zone=rhev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ose-test-node-03.example.com Ready 180d kubernetes.io/hostname=ose-test-node-03.example.com,region=primary,zone=rhev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ose-test-node-04.example.com Ready 180d kubernetes.io/hostname=ose-test-node-04.example.com,region=primary,zone=rhev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[root@ose-test-master-01 ~]&lt;span style="color:#228b22"># oadm router ha-router-teradici \&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --ports=&lt;span style="color:#cd5555">&amp;#39;49999:49999,50000:50000&amp;#39;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">&lt;/span> --stats-port=&lt;span style="color:#b452cd">51936&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">&lt;/span> --replicas=&lt;span style="color:#b452cd">2&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">&lt;/span> --selector=&lt;span style="color:#cd5555">&amp;#34;ha-router=primary&amp;#34;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">&lt;/span> --selector=&lt;span style="color:#cd5555">&amp;#34;region=infra&amp;#34;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">&lt;/span> --labels=&lt;span style="color:#cd5555">&amp;#34;ha-router=teradici&amp;#34;&lt;/span> &lt;span style="color:#cd5555">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">&lt;/span> --default-cert=201602_router_wildcard.os.example.com.pem &lt;span style="color:#cd5555">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">&lt;/span> --service-account=router
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>GOOD&lt;/em>: I see that the ports are set properly in the haproxy.config and the service objects&lt;/p></description></item><item><title>OpenShift Cluster Metrics and Cassandra Troubleshooting</title><link>http://guifreelife.com/blog/2016/11/14/OpenShift-Cluster-Metrics-and-Cassandra-Troubleshooting/</link><pubDate>Mon, 14 Nov 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/11/14/OpenShift-Cluster-Metrics-and-Cassandra-Troubleshooting/</guid><description>&lt;p>OpenShift gathers &lt;a href="https://docs.openshift.com/container-platform/3.3/install_config/cluster_metrics.html">cluster metrics&lt;/a> such as CPU, memory, and network bandwidth per pod which can assist in troubleshooting and capacity planning. The metrics are also used to support &lt;a href="https://docs.openshift.com/container-platform/3.3/dev_guide/pod_autoscaling.html">horizontal pod autoscaling&lt;/a>, which makes the metrics service not just helpful, but critical to operation.&lt;/p>
&lt;h2 id="missing-liveness-probes">Missing Liveness Probes&lt;/h2>
&lt;p>There are 3 major components in the metrics collection process. &lt;a href="https://github.com/kubernetes/heapster">Heapster&lt;/a> gathers stats from Docker and feeds them to &lt;a href="https://github.com/hawkular/hawkular-metrics">Hawkular Metrics&lt;/a> to tuck away for safe keeping in &lt;a href="http://cassandra.apache.org/">Cassandra&lt;/a>.&lt;/p></description></item><item><title>How to List Tags On Redhat Registry Images</title><link>http://guifreelife.com/blog/2016/07/11/List-Tags-On-Redhat-Registry-Images/</link><pubDate>Mon, 11 Jul 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/07/11/List-Tags-On-Redhat-Registry-Images/</guid><description>&lt;p>Ever gone to &lt;a href="https://access.redhat.com/search/#/container-images">RedHat&amp;rsquo;s container registry&lt;/a> to search for an image and been left wondering what versions exist? Ever been frustrated by the inconsistent tag format? Is there a &lt;em>v&lt;/em> or is there not a &lt;em>v&lt;/em>? Me too.&lt;/p>
&lt;p>Docker Hub has progressed to &lt;a href="https://docs.docker.com/registry/spec/api/">v2&lt;/a>, while the RedHat registry is still &lt;a href="https://docs.docker.com/v1.6/reference/api/registry_api/">v1&lt;/a> at the moment. As long as you use the right syntax, you can use curl to query the registry API and &lt;a href="https://docs.docker.com/v1.6/reference/api/registry_api/#list-repository-tags">list the tags&lt;/a> like this:&lt;/p></description></item><item><title>Deploy Hawkular Metrics in CDK 2.1 OpenShift 3.2</title><link>http://guifreelife.com/blog/2016/06/16/Deploy-Hawkular-Metrics-in-CDK-2.0-OpenShift-3.1/</link><pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/06/16/Deploy-Hawkular-Metrics-in-CDK-2.0-OpenShift-3.1/</guid><description>&lt;p>&lt;strong>Update!&lt;/strong> &lt;em>I failed with CDK 2.0, but CDK 2.1 works with some fiddling.&lt;/em>&lt;/p>
&lt;p>In my &lt;a href="http://guifreelife.com/blog/2016/06/16/Getting-Started-With-RedHat-Container-Development-Kit">last post&lt;/a> I installed Red Hat Container Developer Kit to deploy OpenShift Enterprise using Vagrant. But now I want to add Hawkular Metrics to that deployment.&lt;/p>
&lt;h1 id="deploy-metrics">Deploy Metrics&lt;/h1>
&lt;p>Refer to &lt;a href="https://docs.openshift.com/enterprise/3.2/install_config/cluster_metrics.html">the docs&lt;/a> for deploying metrics in OSE.&lt;/p>
&lt;p>&lt;a href="http://guifreelife.com/images/openshift-cdk-metrics-0.png">&lt;img src="http://guifreelife.com/images/thumb/openshift-cdk-metrics-0.png" alt="OpenShift Metrics">&lt;/a>&lt;/p>
&lt;p>Login to the vagrant CDK VM before continuing&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ &lt;span style="color:#658b00">cd&lt;/span> ~/cdk/components/rhel/rhel-ose/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ vagrant ssh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ oc login
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Authentication required &lt;span style="color:#8b008b;font-weight:bold">for&lt;/span> https://127.0.0.1:8443 (openshift)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Username: admin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Password: admin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Login successful.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ oc project openshift-infra
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ oc get sa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>NAME SECRETS AGE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>build-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>daemonset-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>default &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deployer &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>deployment-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gc-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hpa-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>job-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>namespace-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pv-binder-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pv-provisioner-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pv-recycler-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>replication-controller &lt;span style="color:#b452cd">2&lt;/span> 10m
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ oc create -f - &lt;span style="color:#cd5555">&amp;lt;&amp;lt;API
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">kind: ServiceAccount
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> name: metrics-deployer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> secrets:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555"> - name: metrics-deployer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cd5555">API&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ oc secrets new metrics-deployer &lt;span style="color:#00688b">nothing&lt;/span>=/dev/null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ oadm policy add-role-to-user edit system:serviceaccount:openshift-infra:metrics-deployer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ oadm policy add-cluster-role-to-user cluster-reader system:serviceaccount:openshift-infra:heapster
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From your OSE server grab &lt;code>/usr/share/openshift/examples/infrastructure-templates/enterprise/metrics-deployer.yaml&lt;/code> or from &lt;a href="https://raw.githubusercontent.com/openshift/openshift-ansible/master/roles/openshift_examples/files/examples/v1.2/infrastructure-templates/enterprise/metrics-deployer.yaml">here&lt;/a>&lt;/p></description></item><item><title>Getting Started With RedHat Container Development Kit</title><link>http://guifreelife.com/blog/2016/06/16/Getting-Started-With-RedHat-Container-Development-Kit/</link><pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/06/16/Getting-Started-With-RedHat-Container-Development-Kit/</guid><description>&lt;p>The RedHat Container Developer Kit allows you to deploy OpenShift on your laptop for easier testing and development. Here is how to deploy it.&lt;/p>
&lt;p>&lt;a href="http://guifreelife.com/images/openshift-cdk-2.1.png">&lt;img src="http://guifreelife.com/images/thumb/openshift-cdk-2.1.png" alt="OpenShift CDK">&lt;/a>&lt;/p>
&lt;h1 id="register-as-a-redhat-developer">Register as a RedHat Developer&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://developers.redhat.com/">Obtain a RH login&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Place credentials in &lt;code>~/.vagrant.d/Vagrantfile&lt;/code> to enable updates for VMs by automatically registering with RedHat Subscription Manager&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#00688b">Vagrant&lt;/span>.configure(&lt;span style="color:#cd5555">&amp;#39;2&amp;#39;&lt;/span>) &lt;span style="color:#8b008b;font-weight:bold">do&lt;/span> |config|
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config.registration.username = &lt;span style="color:#cd5555">&amp;#39;&amp;lt;your Red Hat username&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> config.registration.password = &lt;span style="color:#cd5555">&amp;#39;&amp;lt;your Red Hat password&amp;gt;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8b008b;font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="mac-os-x-prereqs">Mac OS X Prereqs&lt;/h1>
&lt;ul>
&lt;li>
&lt;p>Install pre-reqs:&lt;/p></description></item><item><title>Upgrading OpenShift Enterprise from 3.1 to 3.2</title><link>http://guifreelife.com/blog/2016/05/17/OpenShift-Enterprise-Upgrade-3.1-to-3.2/</link><pubDate>Tue, 17 May 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/05/17/OpenShift-Enterprise-Upgrade-3.1-to-3.2/</guid><description>&lt;p>Upgrading from OSE 3.1 to 3.2 using the &lt;a href="https://github.com/openshift/openshift-ansible/blob/master/playbooks/common/openshift-cluster/upgrades/v3_1_to_v3_2/upgrade.yml">playbook&lt;/a> went quite well for me, but there were a few issues to sort out.&lt;/p>
&lt;p>The issues were related to:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="#ip-failover">ip failover&lt;/a> had to be updated manually&lt;/li>
&lt;li>there was about 5 minutes &lt;a href="#downtime-during-upgrade">downtime during the upgrade&lt;/a>&lt;/li>
&lt;li>&lt;a href="#image-stream-updates">updates to image streams&lt;/a>&lt;/li>
&lt;li>&lt;a href="#docker-errors">docker error messages&lt;/a>&lt;/li>
&lt;li>&lt;a href="#update-cluster-policies-and-roles">updated policy and role bindings&lt;/a> &lt;em>build strategy Source is not allowed&lt;/em>&lt;/li>
&lt;li>&lt;a href="#hawkular-metrics">hawkular metrics&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="upgrade-process">Upgrade Process&lt;/h1>
&lt;p>Following the directions is pretty straight forward.&lt;/p></description></item><item><title>Changing the SSL Certificate for OpenShift Console</title><link>http://guifreelife.com/blog/2016/03/24/Replace-OpenShift-Console-SSL-Certificate/</link><pubDate>Thu, 24 Mar 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/03/24/Replace-OpenShift-Console-SSL-Certificate/</guid><description>&lt;p>OpenShift has an internal CA for generating certificates to authenticate intra-cluster communication, but your browser doesn&amp;rsquo;t trust this CA. Perhaps you want to fix that without mucking with the internal SSL communication? I did. Here is how.&lt;/p>
&lt;p>This &lt;a href="https://docs.openshift.org/latest/install_config/certificate_customization.html">OpenShift doc&lt;/a> &lt;em>explains&lt;/em> how to do this, but it isn&amp;rsquo;t very clear, to me at least.&lt;/p>
&lt;h1 id="overview">Overview&lt;/h1>
&lt;p>An outline of the steps:&lt;/p>
&lt;ul>
&lt;li>Only make changes to the public URLs and not any internal URLs.&lt;/li>
&lt;li>Create a &lt;code>namedCertificates&lt;/code> section in both &lt;code>/servingInfo&lt;/code> and &lt;code>/assetConfig/servingInfo&lt;/code> sections of &lt;code>/etc/origin/master/master-config.yaml&lt;/code>.&lt;/li>
&lt;li>In those repeated sections:
&lt;ul>
&lt;li>identify a certificate and key&lt;/li>
&lt;li>identify the hostname(s) to match with that cert/key pair&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Your installation may include the following hosts:&lt;/p></description></item><item><title>OpenShift High Availability - Routing</title><link>http://guifreelife.com/blog/2016/03/01/OpenShift-3-HA-Routing/</link><pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2016/03/01/OpenShift-3-HA-Routing/</guid><description>&lt;p>Highly availabile containers in OpenShift are baked into the cake thanks to &lt;a href="https://docs.openshift.com/enterprise/3.1/architecture/core_concepts/deployments.html#replication-controllers">replication controllers&lt;/a> and &lt;a href="https://docs.openshift.com/enterprise/3.1/architecture/core_concepts/pods_and_services.html#services">service load balancing&lt;/a>, but there are plenty of other single points of failure. Here is how to eliminate many of those.&lt;/p>
&lt;h1 id="single-points-of-failure">Single Points of Failure&lt;/h1>
&lt;p>The &lt;a href="https://docs.openshift.com/dedicated/3.1/architecture/infrastructure_components/kubernetes_infrastructure.html">components&lt;/a> of OpenShift include:&lt;/p>
&lt;ul>
&lt;li>Master controller manager server and API endpoint&lt;/li>
&lt;li>Etcd configuration and state storage&lt;/li>
&lt;li>Docker Registry&lt;/li>
&lt;li>Router haproxy&lt;/li>
&lt;/ul>
&lt;p>This post is mostly about adding high availability to the routing layer.&lt;/p></description></item><item><title>Testing OpenShift Enterprise V3</title><link>http://guifreelife.com/blog/2015/07/28/Testing-OpenShift-Enterprise-V3/</link><pubDate>Tue, 28 Jul 2015 00:00:00 +0000</pubDate><guid>http://guifreelife.com/blog/2015/07/28/Testing-OpenShift-Enterprise-V3/</guid><description>&lt;p>So much for testing &lt;a href="http://guifreelife.com/blog/2015/06/28/Testing-Openshift-Origin-V3-with-Ansible-and-Vagrant-on-OS-X">OpenShift Origin with Vagrant on OS X&lt;/a>, because &lt;a href="https://github.com/openshift/openshift-ansible/issues/391">it does not work yet&lt;/a>. Let&amp;rsquo;s evaluate OpenShift Enterprise v3 on RHEL! First go get yourself an eval license. The OpenShift VMs will run RHEL7.1 and ride on top of &lt;a href="https://access.redhat.com/products/red-hat-enterprise-virtualization/">RHEV&lt;/a>.&lt;/p>
&lt;h1 id="documentation">Documentation&lt;/h1>
&lt;p>First off, here are some starting points to get oriented and acquainted with OpenShift.&lt;/p>
&lt;p>&lt;strong>Docs&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://access.redhat.com/products/openshift-enterprise-red-hat/get-started">Getting Started&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://access.redhat.com/documentation/en-US/OpenShift_Enterprise/">Docs&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://docs.openshift.com/enterprise/latest/admin_guide/overview.html">Overview&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/openshift/training">Training&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://install.openshift.com/">Download&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.openshift.com/enterprise/3.1/admin_guide/install/prerequisites.html">Prerequisites&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://access.redhat.com/articles/1755133">OpenShift Enterprise 3 Architecture Guide - planning, deployment and operation of an Open Source Platform as a Service&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Load_Balancer_Administration/ch-lvs-overview-VSA.html">Load Balancing&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Videos&lt;/strong>&lt;/p></description></item></channel></rss>