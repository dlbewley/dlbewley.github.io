<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>etcd on dwnwrd Universal</title><link>https://dwnwrd.github.io/tags/etcd/</link><description>Recent content in etcd on dwnwrd Universal</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 19 Feb 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://dwnwrd.github.io/tags/etcd/index.xml" rel="self" type="application/rss+xml"/><item><title>Downgrade Etcd 3.3.11 to 3.2.22 for OpenShift Compatibility</title><link>https://dwnwrd.github.io/blog/2019/02/19/Downgrade-Etcd-for-OpenShift-Compatibility/</link><pubDate>Tue, 19 Feb 2019 00:00:00 +0000</pubDate><guid>https://dwnwrd.github.io/blog/2019/02/19/Downgrade-Etcd-for-OpenShift-Compatibility/</guid><description>While I was working on migrating etcd to my master nodes I was bitten by an incompatible etcd v3.3.11 RPM made available via RHEL Server Extras repo. Before I got to my last master the RPM was no longer available, and the scaleup playbook failed. I became aware that 3.3.11 is not compatible and should not have been made available.
Unfortunately all members of my etcd cluster were already upgraded and the fix is to take down the cluster, downgrade etcd, and restore from snapshot.</description></item><item><title>Etcdctl v2 and v3 Aliases for Peer Authenticated Commands</title><link>https://dwnwrd.github.io/blog/2019/02/08/Etcd-Shortcut-With-Peer-Auth/</link><pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate><guid>https://dwnwrd.github.io/blog/2019/02/08/Etcd-Shortcut-With-Peer-Auth/</guid><description>Getting all the arguments to etcdctl right can be a bit of a pain. Here are a couple of aliases which take advantage of the values in the etcd.conf file.
alias etcd2=&amp;#39;. /etc/etcd/etcd.conf &amp;amp;&amp;amp; \ ETCDCTL_API=2 etcdctl \ --cert-file ${ETCD_PEER_CERT_FILE} \ --key-file ${ETCD_PEER_KEY_FILE} \ --ca-file ${ETCD_PEER_TRUSTED_CA_FILE:-$ETCD_PEER_CA_FILE} \ --endpoints &amp;#34;${ETCD_ADVERTISE_CLIENT_URLS}&amp;#34;&amp;#39; alias etcd3=&amp;#39;. /etc/etcd/etcd.conf &amp;amp;&amp;amp; \ ETCDCTL_API=3 etcdctl \ --cert ${ETCD_PEER_CERT_FILE} \ --key ${ETCD_PEER_KEY_FILE} \ --cacert ${ETCD_PEER_TRUSTED_CA_FILE:-$ETCD_PEER_CA_FILE} \ --endpoints &amp;#34;${ETCD_ADVERTISE_CLIENT_URLS}&amp;#34;&amp;#39; If you are using OpenShift, you may also find that you already have some bash functions enabled by the etcd role in /etc/profile.</description></item><item><title>Migration of Etcd to Masters for OpenShift 3.9 to 3.10 Upgrade</title><link>https://dwnwrd.github.io/blog/2019/02/08/Migration-of-Etcd-to-Masters-for-OpenShift-3.9-Upgrade-to-3.10/</link><pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate><guid>https://dwnwrd.github.io/blog/2019/02/08/Migration-of-Etcd-to-Masters-for-OpenShift-3.9-Upgrade-to-3.10/</guid><description>As of OpenShift Container Platform 3.10 etcd is expected to run in static pods on the master nodes in the control plane. You may have a deployed an HA cluster with dedicated etcd nodes managed with systemd. How do you migrate the this new architecture?
Assumptions:
You are running OCP 3.9 You have multiple Master nodes You have dedicated Etcd nodes You are running RHEL, not Atomic nodes Outline:</description></item></channel></rss>